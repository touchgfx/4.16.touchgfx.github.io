(self.webpackChunktouchgfx_documentation=self.webpackChunktouchgfx_documentation||[]).push([[3599],{3905:function(t,n,a){"use strict";a.d(n,{Zo:function(){return p},kt:function(){return g}});var e=a(67294);function r(t,n,a){return n in t?Object.defineProperty(t,n,{value:a,enumerable:!0,configurable:!0,writable:!0}):t[n]=a,t}function l(t,n){var a=Object.keys(t);if(Object.getOwnPropertySymbols){var e=Object.getOwnPropertySymbols(t);n&&(e=e.filter((function(n){return Object.getOwnPropertyDescriptor(t,n).enumerable}))),a.push.apply(a,e)}return a}function i(t){for(var n=1;n<arguments.length;n++){var a=null!=arguments[n]?arguments[n]:{};n%2?l(Object(a),!0).forEach((function(n){r(t,n,a[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(n){Object.defineProperty(t,n,Object.getOwnPropertyDescriptor(a,n))}))}return t}function o(t,n){if(null==t)return{};var a,e,r=function(t,n){if(null==t)return{};var a,e,r={},l=Object.keys(t);for(e=0;e<l.length;e++)a=l[e],n.indexOf(a)>=0||(r[a]=t[a]);return r}(t,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);for(e=0;e<l.length;e++)a=l[e],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(t,a)&&(r[a]=t[a])}return r}var u=e.createContext({}),d=function(t){var n=e.useContext(u),a=n;return t&&(a="function"==typeof t?t(n):i(i({},n),t)),a},p=function(t){var n=d(t.components);return e.createElement(u.Provider,{value:n},t.children)},k={inlineCode:"code",wrapper:function(t){var n=t.children;return e.createElement(e.Fragment,{},n)}},m=e.forwardRef((function(t,n){var a=t.components,r=t.mdxType,l=t.originalType,u=t.parentName,p=o(t,["components","mdxType","originalType","parentName"]),m=d(a),g=r,c=m["".concat(u,".").concat(g)]||m[g]||k[g]||l;return a?e.createElement(c,i(i({ref:n},p),{},{components:a})):e.createElement(c,i({ref:n},p))}));function g(t,n){var a=arguments,r=n&&n.mdxType;if("string"==typeof t||r){var l=a.length,i=new Array(l);i[0]=m;var o={};for(var u in n)hasOwnProperty.call(n,u)&&(o[u]=n[u]);o.originalType=t,o.mdxType="string"==typeof t?t:r,i[1]=o;for(var d=2;d<l;d++)i[d]=a[d];return e.createElement.apply(null,i)}return e.createElement.apply(null,a)}m.displayName="MDXCreateElement"},43861:function(t,n,a){"use strict";var e=a(67294);class r extends e.Component{render(){const t=/.*#(.*)/.exec(this.props.url)[1];return e.createElement("a",{"aria-hidden":"true",tabindex:"-1",class:"anchor enhancedAnchor_node_modules-@docusaurus-theme-classic-src-theme-Heading-",id:t})}}n.Z=r},31217:function(t,n,a){"use strict";a.d(n,{Z:function(){return f}});var e=a(67294),r=a(73727),l=a(11368),i=a(35096),o=a(84487);const u=(0,e.createContext)({collectLink:()=>{}});var d=a(25026),p=a(67023),k=Object.defineProperty,m=Object.defineProperties,g=Object.getOwnPropertyDescriptors,c=Object.getOwnPropertySymbols,N=Object.prototype.hasOwnProperty,s=Object.prototype.propertyIsEnumerable,h=(t,n,a)=>n in t?k(t,n,{enumerable:!0,configurable:!0,writable:!0,value:a}):t[n]=a,b=(t,n)=>{for(var a in n||(n={}))N.call(n,a)&&h(t,a,n[a]);if(c)for(var a of c(n))s.call(n,a)&&h(t,a,n[a]);return t};var f=function(t){var n,a=t,{isNavLink:k,to:h,href:f,activeClassName:y,isActive:_,"data-noBrokenLinkCheck":v,autoAddBaseUrl:x=!0}=a,w=((t,n)=>{var a={};for(var e in t)N.call(t,e)&&n.indexOf(e)<0&&(a[e]=t[e]);if(null!=t&&c)for(var e of c(t))n.indexOf(e)<0&&s.call(t,e)&&(a[e]=t[e]);return a})(a,["isNavLink","to","href","activeClassName","isActive","data-noBrokenLinkCheck","autoAddBaseUrl"]);const{siteConfig:{trailingSlash:T}}=(0,l.Z)(),{withBaseUrl:H}=(0,d.C)(),S=(0,e.useContext)(u),C=h||f,L=(0,i.Z)(C),B=null==C?void 0:C.replace("pathname://","");let V=void 0!==B?(F=B,x&&(t=>t.startsWith("/"))(F)?H(F):F):void 0;var F;V&&L&&(V=(0,p.applyTrailingSlash)(V,T));const O=(0,e.useRef)(!1),R=k?r.OL:r.rU,G=o.Z.canUseIntersectionObserver;let Z;(0,e.useEffect)((()=>(!G&&L&&null!=V&&window.docusaurus.prefetch(V),()=>{G&&Z&&Z.disconnect()})),[V,G,L]);const P=null!==(n=null==V?void 0:V.startsWith("#"))&&void 0!==n&&n,D=!V||!L||P;return V&&L&&!P&&!v&&S.collectLink(V),D?e.createElement("a",b(b({href:V},C&&!L&&{target:"_blank",rel:"noopener noreferrer"}),w)):e.createElement(R,b((j=b({},w),m(j,g({onMouseEnter:()=>{O.current||null==V||(window.docusaurus.preload(V),O.current=!0)},innerRef:t=>{var n,a;G&&t&&L&&(n=t,a=()=>{null!=V&&window.docusaurus.prefetch(V)},Z=new window.IntersectionObserver((t=>{t.forEach((t=>{n===t.target&&(t.isIntersecting||t.intersectionRatio>0)&&(Z.unobserve(n),Z.disconnect(),a())}))})),Z.observe(n))},to:V||""}))),k&&{isActive:_,activeClassName:y}));var j}},35096:function(t,n,a){"use strict";function e(t){return!0===/^(\w*:|\/\/)/.test(t)}function r(t){return void 0!==t&&!e(t)}a.d(n,{b:function(){return e},Z:function(){return r}})},25026:function(t,n,a){"use strict";a.d(n,{C:function(){return l},Z:function(){return i}});var e=a(11368),r=a(35096);function l(){const{siteConfig:{baseUrl:t="/",url:n}={}}=(0,e.Z)();return{withBaseUrl:(a,e)=>function(t,n,a,{forcePrependBaseUrl:e=!1,absolute:l=!1}={}){if(!a)return a;if(a.startsWith("#"))return a;if((0,r.b)(a))return a;if(e)return n+a;const i=a.startsWith(n)?a:n+a.replace(/^\//,"");return l?t+i:i}(n,t,a,e)}}function i(t,n={}){const{withBaseUrl:a}=l();return a(t,n)}},67271:function(t,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.default=function(t,n){if(t.startsWith("#"))return t;if(void 0===n)return t;const[a]=t.split(/[#?]/),e="/"===a?"/":(r=a,n?function(t){return t.endsWith("/")?t:`${t}/`}(r):function(t){return t.endsWith("/")?t.slice(0,-1):t}(r));var r;return t.replace(a,e)}},67023:function(t,n,a){"use strict";var e=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(n,"__esModule",{value:!0}),n.uniq=n.applyTrailingSlash=void 0;var r=a(67271);Object.defineProperty(n,"applyTrailingSlash",{enumerable:!0,get:function(){return e(r).default}});var l=a(11080);Object.defineProperty(n,"uniq",{enumerable:!0,get:function(){return e(l).default}})},11080:function(t,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.default=function(t){return Array.from(new Set(t))}},14678:function(t,n,a){"use strict";a.r(n),a.d(n,{frontMatter:function(){return c},contentTitle:function(){return N},metadata:function(){return s},toc:function(){return h},default:function(){return f}});var e=a(3905),r=a(31217),l=a(43861),i=Object.defineProperty,o=Object.defineProperties,u=Object.getOwnPropertyDescriptors,d=Object.getOwnPropertySymbols,p=Object.prototype.hasOwnProperty,k=Object.prototype.propertyIsEnumerable,m=(t,n,a)=>n in t?i(t,n,{enumerable:!0,configurable:!0,writable:!0,value:a}):t[n]=a,g=(t,n)=>{for(var a in n||(n={}))p.call(n,a)&&m(t,a,n[a]);if(d)for(var a of d(n))k.call(n,a)&&m(t,a,n[a]);return t};const c={title:"Color"},N=void 0,s={unversionedId:"api/classes/classtouchgfx_1_1_color",id:"api/classes/classtouchgfx_1_1_color",isDocsHomePage:!1,title:"Color",description:"Contains functionality for color conversion.",source:"@site/docs/api/classes/classtouchgfx_1_1_color.mdx",sourceDirName:"api/classes",slug:"/api/classes/classtouchgfx_1_1_color",permalink:"/4.16/ko/docs/api/classes/classtouchgfx_1_1_color",version:"current",frontMatter:{title:"Color"},sidebar:"docs",previous:{title:"ClickListener",permalink:"/4.16/ko/docs/api/classes/classtouchgfx_1_1_click_listener"},next:{title:"colortype",permalink:"/4.16/ko/docs/api/classes/structtouchgfx_1_1colortype"}},h=[{value:"Public Functions",id:"public-functions",children:[]},{value:"Public Functions Documentation",id:"public-functions-documentation",children:[{value:"getBlueColor",id:"getbluecolor",children:[]},{value:"getColorFrom24BitHSL",id:"getcolorfrom24bithsl",children:[]},{value:"getColorFrom24BitHSV",id:"getcolorfrom24bithsv",children:[]},{value:"getColorFrom24BitRGB",id:"getcolorfrom24bitrgb",children:[]},{value:"getGreenColor",id:"getgreencolor",children:[]},{value:"getHSLFrom24BitRGB",id:"gethslfrom24bitrgb",children:[]},{value:"getHSLFromColor",id:"gethslfromcolor",children:[]},{value:"getHSLFromHSV",id:"gethslfromhsv",children:[]},{value:"getHSVFrom24BitRGB",id:"gethsvfrom24bitrgb",children:[]},{value:"getHSVFromColor",id:"gethsvfromcolor",children:[]},{value:"getHSVFromHSL",id:"gethsvfromhsl",children:[]},{value:"getRedColor",id:"getredcolor",children:[]},{value:"getRGBFrom24BitHSL",id:"getrgbfrom24bithsl",children:[]},{value:"getRGBFrom24BitHSV",id:"getrgbfrom24bithsv",children:[]}]}],b={toc:h};function f(t){var n,a=t,{components:i}=a,m=((t,n)=>{var a={};for(var e in t)p.call(t,e)&&n.indexOf(e)<0&&(a[e]=t[e]);if(null!=t&&d)for(var e of d(t))n.indexOf(e)<0&&k.call(t,e)&&(a[e]=t[e]);return a})(a,["components"]);return(0,e.kt)("wrapper",(n=g(g({},b),m),o(n,u({components:i,mdxType:"MDXLayout"}))),(0,e.kt)("p",null,"Contains functionality for color conversion. "),(0,e.kt)("h2",g({},{id:"public-functions"}),"Public Functions"),(0,e.kt)("div",{class:"function-table",markdown:"1"},(0,e.kt)("table",null,(0,e.kt)("thead",{parentName:"table"},(0,e.kt)("tr",{parentName:"thead"},(0,e.kt)("th",g({parentName:"tr"},{align:"right"})),(0,e.kt)("th",g({parentName:"tr"},{align:null})))),(0,e.kt)("tbody",{parentName:"table"},(0,e.kt)("tr",{parentName:"tbody"},(0,e.kt)("td",g({parentName:"tr"},{align:"right"}),"FORCE_INLINE_FUNCTION uint8_t"),(0,e.kt)("td",g({parentName:"tr"},{align:null}),(0,e.kt)("strong",{parentName:"td"},(0,e.kt)(r.Z,{to:"classtouchgfx_1_1_color#function-getbluecolor",mdxType:"Link"},"getBlueColor")),"(",(0,e.kt)("a",g({parentName:"td"},{href:"structtouchgfx_1_1colortype"}),"colortype")," color)")),(0,e.kt)("tr",{parentName:"tbody"},(0,e.kt)("td",g({parentName:"tr"},{align:"right"})),(0,e.kt)("td",g({parentName:"tr"},{align:null}),"Gets the blue color part of a color.")),(0,e.kt)("tr",{parentName:"tbody"},(0,e.kt)("td",g({parentName:"tr"},{align:"right"})),(0,e.kt)("td",g({parentName:"tr"},{align:null}))),(0,e.kt)("tr",{parentName:"tbody"},(0,e.kt)("td",g({parentName:"tr"},{align:"right"}),(0,e.kt)("a",g({parentName:"td"},{href:"structtouchgfx_1_1colortype"}),"colortype")),(0,e.kt)("td",g({parentName:"tr"},{align:null}),(0,e.kt)("strong",{parentName:"td"},(0,e.kt)(r.Z,{to:"classtouchgfx_1_1_color#function-getcolorfrom24bithsl",mdxType:"Link"},"getColorFrom24BitHSL")),"(uint8_t hue, uint8_t saturation, uint8_t luminance)")),(0,e.kt)("tr",{parentName:"tbody"},(0,e.kt)("td",g({parentName:"tr"},{align:"right"})),(0,e.kt)("td",g({parentName:"tr"},{align:null}),"Convert a given color from HSV (Hue, Saturation, Value) to colortype.")),(0,e.kt)("tr",{parentName:"tbody"},(0,e.kt)("td",g({parentName:"tr"},{align:"right"})),(0,e.kt)("td",g({parentName:"tr"},{align:null}))),(0,e.kt)("tr",{parentName:"tbody"},(0,e.kt)("td",g({parentName:"tr"},{align:"right"}),(0,e.kt)("a",g({parentName:"td"},{href:"structtouchgfx_1_1colortype"}),"colortype")),(0,e.kt)("td",g({parentName:"tr"},{align:null}),(0,e.kt)("strong",{parentName:"td"},(0,e.kt)(r.Z,{to:"classtouchgfx_1_1_color#function-getcolorfrom24bithsv",mdxType:"Link"},"getColorFrom24BitHSV")),"(uint8_t hue, uint8_t saturation, uint8_t value)")),(0,e.kt)("tr",{parentName:"tbody"},(0,e.kt)("td",g({parentName:"tr"},{align:"right"})),(0,e.kt)("td",g({parentName:"tr"},{align:null}),"Convert a given color from HSV (Hue, Saturation, Value) to colortype.")),(0,e.kt)("tr",{parentName:"tbody"},(0,e.kt)("td",g({parentName:"tr"},{align:"right"})),(0,e.kt)("td",g({parentName:"tr"},{align:null}))),(0,e.kt)("tr",{parentName:"tbody"},(0,e.kt)("td",g({parentName:"tr"},{align:"right"}),(0,e.kt)("a",g({parentName:"td"},{href:"structtouchgfx_1_1colortype"}),"colortype")),(0,e.kt)("td",g({parentName:"tr"},{align:null}),(0,e.kt)("strong",{parentName:"td"},(0,e.kt)(r.Z,{to:"classtouchgfx_1_1_color#function-getcolorfrom24bitrgb",mdxType:"Link"},"getColorFrom24BitRGB")),"(uint8_t red, uint8_t green, uint8_t blue)")),(0,e.kt)("tr",{parentName:"tbody"},(0,e.kt)("td",g({parentName:"tr"},{align:"right"})),(0,e.kt)("td",g({parentName:"tr"},{align:null}),"Generates a color representation to be used on the LCD, based on 24 bit RGB values.")),(0,e.kt)("tr",{parentName:"tbody"},(0,e.kt)("td",g({parentName:"tr"},{align:"right"})),(0,e.kt)("td",g({parentName:"tr"},{align:null}))),(0,e.kt)("tr",{parentName:"tbody"},(0,e.kt)("td",g({parentName:"tr"},{align:"right"}),"FORCE_INLINE_FUNCTION uint8_t"),(0,e.kt)("td",g({parentName:"tr"},{align:null}),(0,e.kt)("strong",{parentName:"td"},(0,e.kt)(r.Z,{to:"classtouchgfx_1_1_color#function-getgreencolor",mdxType:"Link"},"getGreenColor")),"(",(0,e.kt)("a",g({parentName:"td"},{href:"structtouchgfx_1_1colortype"}),"colortype")," color)")),(0,e.kt)("tr",{parentName:"tbody"},(0,e.kt)("td",g({parentName:"tr"},{align:"right"})),(0,e.kt)("td",g({parentName:"tr"},{align:null}),"Gets the green color part of a color.")),(0,e.kt)("tr",{parentName:"tbody"},(0,e.kt)("td",g({parentName:"tr"},{align:"right"})),(0,e.kt)("td",g({parentName:"tr"},{align:null}))),(0,e.kt)("tr",{parentName:"tbody"},(0,e.kt)("td",g({parentName:"tr"},{align:"right"}),"void"),(0,e.kt)("td",g({parentName:"tr"},{align:null}),(0,e.kt)("strong",{parentName:"td"},(0,e.kt)(r.Z,{to:"classtouchgfx_1_1_color#function-gethslfrom24bitrgb",mdxType:"Link"},"getHSLFrom24BitRGB")),"(uint8_t red, uint8_t green, uint8_t blue, uint8_t & hue, uint8_t & saturation, uint8_t & luminance)")),(0,e.kt)("tr",{parentName:"tbody"},(0,e.kt)("td",g({parentName:"tr"},{align:"right"})),(0,e.kt)("td",g({parentName:"tr"},{align:null}),"Convert a given color from RGB (Red, Green, Blue) to HSV (Hue, Saturation, Value).")),(0,e.kt)("tr",{parentName:"tbody"},(0,e.kt)("td",g({parentName:"tr"},{align:"right"})),(0,e.kt)("td",g({parentName:"tr"},{align:null}))),(0,e.kt)("tr",{parentName:"tbody"},(0,e.kt)("td",g({parentName:"tr"},{align:"right"}),"void"),(0,e.kt)("td",g({parentName:"tr"},{align:null}),(0,e.kt)("strong",{parentName:"td"},(0,e.kt)(r.Z,{to:"classtouchgfx_1_1_color#function-gethslfromcolor",mdxType:"Link"},"getHSLFromColor")),"(",(0,e.kt)("a",g({parentName:"td"},{href:"structtouchgfx_1_1colortype"}),"colortype")," color, uint8_t & hue, uint8_t & saturation, uint8_t & luminance)")),(0,e.kt)("tr",{parentName:"tbody"},(0,e.kt)("td",g({parentName:"tr"},{align:"right"})),(0,e.kt)("td",g({parentName:"tr"},{align:null}),"Convert a given colortype color to HSV (Hue, Saturation, Value).")),(0,e.kt)("tr",{parentName:"tbody"},(0,e.kt)("td",g({parentName:"tr"},{align:"right"})),(0,e.kt)("td",g({parentName:"tr"},{align:null}))),(0,e.kt)("tr",{parentName:"tbody"},(0,e.kt)("td",g({parentName:"tr"},{align:"right"}),"void"),(0,e.kt)("td",g({parentName:"tr"},{align:null}),(0,e.kt)("strong",{parentName:"td"},(0,e.kt)(r.Z,{to:"classtouchgfx_1_1_color#function-gethslfromhsv",mdxType:"Link"},"getHSLFromHSV")),"(uint8_t hue, uint8_t & saturation, uint8_t value, uint8_t & luminance)")),(0,e.kt)("tr",{parentName:"tbody"},(0,e.kt)("td",g({parentName:"tr"},{align:"right"})),(0,e.kt)("td",g({parentName:"tr"},{align:null}),"Convert HSV (Hue, Saturation, Value) to HSL (Hue, Saturation, Luminance).")),(0,e.kt)("tr",{parentName:"tbody"},(0,e.kt)("td",g({parentName:"tr"},{align:"right"})),(0,e.kt)("td",g({parentName:"tr"},{align:null}))),(0,e.kt)("tr",{parentName:"tbody"},(0,e.kt)("td",g({parentName:"tr"},{align:"right"}),"void"),(0,e.kt)("td",g({parentName:"tr"},{align:null}),(0,e.kt)("strong",{parentName:"td"},(0,e.kt)(r.Z,{to:"classtouchgfx_1_1_color#function-gethsvfrom24bitrgb",mdxType:"Link"},"getHSVFrom24BitRGB")),"(uint8_t red, uint8_t green, uint8_t blue, uint8_t & hue, uint8_t & saturation, uint8_t & value)")),(0,e.kt)("tr",{parentName:"tbody"},(0,e.kt)("td",g({parentName:"tr"},{align:"right"})),(0,e.kt)("td",g({parentName:"tr"},{align:null}),"Convert a given color from RGB (Red, Green, Blue) to HSV (Hue, Saturation, Value).")),(0,e.kt)("tr",{parentName:"tbody"},(0,e.kt)("td",g({parentName:"tr"},{align:"right"})),(0,e.kt)("td",g({parentName:"tr"},{align:null}))),(0,e.kt)("tr",{parentName:"tbody"},(0,e.kt)("td",g({parentName:"tr"},{align:"right"}),"void"),(0,e.kt)("td",g({parentName:"tr"},{align:null}),(0,e.kt)("strong",{parentName:"td"},(0,e.kt)(r.Z,{to:"classtouchgfx_1_1_color#function-gethsvfromcolor",mdxType:"Link"},"getHSVFromColor")),"(",(0,e.kt)("a",g({parentName:"td"},{href:"structtouchgfx_1_1colortype"}),"colortype")," color, uint8_t & hue, uint8_t & saturation, uint8_t & value)")),(0,e.kt)("tr",{parentName:"tbody"},(0,e.kt)("td",g({parentName:"tr"},{align:"right"})),(0,e.kt)("td",g({parentName:"tr"},{align:null}),"Convert a given colortype color to HSV (Hue, Saturation, Value).")),(0,e.kt)("tr",{parentName:"tbody"},(0,e.kt)("td",g({parentName:"tr"},{align:"right"})),(0,e.kt)("td",g({parentName:"tr"},{align:null}))),(0,e.kt)("tr",{parentName:"tbody"},(0,e.kt)("td",g({parentName:"tr"},{align:"right"}),"void"),(0,e.kt)("td",g({parentName:"tr"},{align:null}),(0,e.kt)("strong",{parentName:"td"},(0,e.kt)(r.Z,{to:"classtouchgfx_1_1_color#function-gethsvfromhsl",mdxType:"Link"},"getHSVFromHSL")),"(uint8_t hue, uint8_t & saturation, uint8_t luminance, uint8_t & value)")),(0,e.kt)("tr",{parentName:"tbody"},(0,e.kt)("td",g({parentName:"tr"},{align:"right"})),(0,e.kt)("td",g({parentName:"tr"},{align:null}),"Convert HSL (Hue, Saturation, Luminance) to HSV (Hue, Saturation, Value).")),(0,e.kt)("tr",{parentName:"tbody"},(0,e.kt)("td",g({parentName:"tr"},{align:"right"})),(0,e.kt)("td",g({parentName:"tr"},{align:null}))),(0,e.kt)("tr",{parentName:"tbody"},(0,e.kt)("td",g({parentName:"tr"},{align:"right"}),"FORCE_INLINE_FUNCTION uint8_t"),(0,e.kt)("td",g({parentName:"tr"},{align:null}),(0,e.kt)("strong",{parentName:"td"},(0,e.kt)(r.Z,{to:"classtouchgfx_1_1_color#function-getredcolor",mdxType:"Link"},"getRedColor")),"(",(0,e.kt)("a",g({parentName:"td"},{href:"structtouchgfx_1_1colortype"}),"colortype")," color)")),(0,e.kt)("tr",{parentName:"tbody"},(0,e.kt)("td",g({parentName:"tr"},{align:"right"})),(0,e.kt)("td",g({parentName:"tr"},{align:null}),"Gets the red color part of a color.")),(0,e.kt)("tr",{parentName:"tbody"},(0,e.kt)("td",g({parentName:"tr"},{align:"right"})),(0,e.kt)("td",g({parentName:"tr"},{align:null}))),(0,e.kt)("tr",{parentName:"tbody"},(0,e.kt)("td",g({parentName:"tr"},{align:"right"}),"void"),(0,e.kt)("td",g({parentName:"tr"},{align:null}),(0,e.kt)("strong",{parentName:"td"},(0,e.kt)(r.Z,{to:"classtouchgfx_1_1_color#function-getrgbfrom24bithsl",mdxType:"Link"},"getRGBFrom24BitHSL")),"(uint8_t hue, uint8_t saturation, uint8_t luminance, uint8_t & red, uint8_t & green, uint8_t & blue)")),(0,e.kt)("tr",{parentName:"tbody"},(0,e.kt)("td",g({parentName:"tr"},{align:"right"})),(0,e.kt)("td",g({parentName:"tr"},{align:null}),"Convert a given color from HSV (Hue, Saturation, Value) to RGB (Red, Green, Blue).")),(0,e.kt)("tr",{parentName:"tbody"},(0,e.kt)("td",g({parentName:"tr"},{align:"right"})),(0,e.kt)("td",g({parentName:"tr"},{align:null}))),(0,e.kt)("tr",{parentName:"tbody"},(0,e.kt)("td",g({parentName:"tr"},{align:"right"}),"void"),(0,e.kt)("td",g({parentName:"tr"},{align:null}),(0,e.kt)("strong",{parentName:"td"},(0,e.kt)(r.Z,{to:"classtouchgfx_1_1_color#function-getrgbfrom24bithsv",mdxType:"Link"},"getRGBFrom24BitHSV")),"(uint8_t hue, uint8_t saturation, uint8_t value, uint8_t & red, uint8_t & green, uint8_t & blue)")),(0,e.kt)("tr",{parentName:"tbody"},(0,e.kt)("td",g({parentName:"tr"},{align:"right"})),(0,e.kt)("td",g({parentName:"tr"},{align:null}),"Convert a given color from HSV (Hue, Saturation, Value) to RGB (Red, Green, Blue).")),(0,e.kt)("tr",{parentName:"tbody"},(0,e.kt)("td",g({parentName:"tr"},{align:"right"})),(0,e.kt)("td",g({parentName:"tr"},{align:null})))))),(0,e.kt)("h2",g({},{id:"public-functions-documentation"}),"Public Functions Documentation"),(0,e.kt)(l.Z,{url:"classtouchgfx_1_1_color#function-getbluecolor",mdxType:"DoxybookHeaderLink"}),(0,e.kt)("h3",g({},{id:"getbluecolor"}),"getBlueColor"),(0,e.kt)("div",{class:"api-container",markdown:"1"},(0,e.kt)("div",{class:"api-container-header api-container-header-function",markdown:"1"},(0,e.kt)("table",null,(0,e.kt)("thead",{parentName:"table"},(0,e.kt)("tr",{parentName:"thead"},(0,e.kt)("th",g({parentName:"tr"},{align:null})),(0,e.kt)("th",g({parentName:"tr"},{align:null})),(0,e.kt)("th",g({parentName:"tr"},{align:null})),(0,e.kt)("th",g({parentName:"tr"},{align:null})),(0,e.kt)("th",g({parentName:"tr"},{align:null})),(0,e.kt)("th",g({parentName:"tr"},{align:null})))),(0,e.kt)("tbody",{parentName:"table"},(0,e.kt)("tr",{parentName:"tbody"},(0,e.kt)("td",g({parentName:"tr"},{align:null}),"static","\xa0","FORCE_INLINE_FUNCTION uint8_t","\xa0",(0,e.kt)(r.Z,{to:"classtouchgfx_1_1_color#function-getbluecolor",mdxType:"Link"},"getBlueColor")),(0,e.kt)("td",g({parentName:"tr"},{align:null}),"("),(0,e.kt)("td",g({parentName:"tr"},{align:null}),(0,e.kt)("a",g({parentName:"td"},{href:"structtouchgfx_1_1colortype"}),"colortype")),(0,e.kt)("td",g({parentName:"tr"},{align:null}),"color"),(0,e.kt)("td",g({parentName:"tr"},{align:null}),")"),(0,e.kt)("td",g({parentName:"tr"},{align:null}))),(0,e.kt)("tr",{parentName:"tbody"},(0,e.kt)("td",g({parentName:"tr"},{align:null})),(0,e.kt)("td",g({parentName:"tr"},{align:null})),(0,e.kt)("td",g({parentName:"tr"},{align:null})),(0,e.kt)("td",g({parentName:"tr"},{align:null})),(0,e.kt)("td",g({parentName:"tr"},{align:null})),(0,e.kt)("td",g({parentName:"tr"},{align:null})))))),(0,e.kt)("div",{class:"api-container-content api-container-content-function",markdown:"1"},(0,e.kt)("p",null,"Gets the blue color part of a color. "),(0,e.kt)("p",null,"As this function must work for all color depths, it can be somewhat slow if used in speed critical sections. Consider finding the color in another way, if possible. If the color depth of the display is known, consider using function getBlueFromColor() from the current ",(0,e.kt)("a",g({parentName:"p"},{href:"classtouchgfx_1_1_l_c_d"}),"LCD"),"."),(0,e.kt)("div",{class:"api-content-indented-header",markdown:"1"},"Parameters:"),(0,e.kt)("div",{class:"api-content-indented",markdown:"1"},(0,e.kt)("table",null,(0,e.kt)("thead",{parentName:"table"},(0,e.kt)("tr",{parentName:"thead"},(0,e.kt)("th",g({parentName:"tr"},{align:null})),(0,e.kt)("th",g({parentName:"tr"},{align:null})))),(0,e.kt)("tbody",{parentName:"table"},(0,e.kt)("tr",{parentName:"tbody"},(0,e.kt)("td",g({parentName:"tr"},{align:null}),"color"),(0,e.kt)("td",g({parentName:"tr"},{align:null}),"The color value."))))),(0,e.kt)("div",{class:"api-content-indented-header",markdown:"1"},"Returns:"),(0,e.kt)("div",{class:"api-content-indented",markdown:"1"},(0,e.kt)("p",null,"The blue part of the color.")),(0,e.kt)("div",{class:"api-content-indented-header",markdown:"1"},"See also:"),(0,e.kt)("div",{class:"api-content-indented",markdown:"1"},(0,e.kt)("p",null,(0,e.kt)("a",g({parentName:"p"},{href:"classtouchgfx_1_1_l_c_d16bpp#function-getbluefromcolor"}),"LCD16bpp::getBlueFromColor"))))),(0,e.kt)(l.Z,{url:"classtouchgfx_1_1_color#function-getcolorfrom24bithsl",mdxType:"DoxybookHeaderLink"}),(0,e.kt)("h3",g({},{id:"getcolorfrom24bithsl"}),"getColorFrom24BitHSL"),(0,e.kt)("div",{class:"api-container",markdown:"1"},(0,e.kt)("div",{class:"api-container-header api-container-header-function",markdown:"1"},(0,e.kt)("table",null,(0,e.kt)("thead",{parentName:"table"},(0,e.kt)("tr",{parentName:"thead"},(0,e.kt)("th",g({parentName:"tr"},{align:null})),(0,e.kt)("th",g({parentName:"tr"},{align:null})),(0,e.kt)("th",g({parentName:"tr"},{align:null})),(0,e.kt)("th",g({parentName:"tr"},{align:null})),(0,e.kt)("th",g({parentName:"tr"},{align:null})),(0,e.kt)("th",g({parentName:"tr"},{align:null})))),(0,e.kt)("tbody",{parentName:"table"},(0,e.kt)("tr",{parentName:"tbody"},(0,e.kt)("td",g({parentName:"tr"},{align:null}),"static","\xa0","colortype","\xa0",(0,e.kt)(r.Z,{to:"classtouchgfx_1_1_color#function-getcolorfrom24bithsl",mdxType:"Link"},"getColorFrom24BitHSL")),(0,e.kt)("td",g({parentName:"tr"},{align:null}),"("),(0,e.kt)("td",g({parentName:"tr"},{align:null}),"uint8_t"),(0,e.kt)("td",g({parentName:"tr"},{align:null}),"hue ,"),(0,e.kt)("td",g({parentName:"tr"},{align:null})),(0,e.kt)("td",g({parentName:"tr"},{align:null}))),(0,e.kt)("tr",{parentName:"tbody"},(0,e.kt)("td",g({parentName:"tr"},{align:null})),(0,e.kt)("td",g({parentName:"tr"},{align:null})),(0,e.kt)("td",g({parentName:"tr"},{align:null}),"uint8_t"),(0,e.kt)("td",g({parentName:"tr"},{align:null}),"saturation ,"),(0,e.kt)("td",g({parentName:"tr"},{align:null})),(0,e.kt)("td",g({parentName:"tr"},{align:null}))),(0,e.kt)("tr",{parentName:"tbody"},(0,e.kt)("td",g({parentName:"tr"},{align:null})),(0,e.kt)("td",g({parentName:"tr"},{align:null})),(0,e.kt)("td",g({parentName:"tr"},{align:null}),"uint8_t"),(0,e.kt)("td",g({parentName:"tr"},{align:null}),"luminance"),(0,e.kt)("td",g({parentName:"tr"},{align:null})),(0,e.kt)("td",g({parentName:"tr"},{align:null}))),(0,e.kt)("tr",{parentName:"tbody"},(0,e.kt)("td",g({parentName:"tr"},{align:null})),(0,e.kt)("td",g({parentName:"tr"},{align:null})),(0,e.kt)("td",g({parentName:"tr"},{align:null}),")"),(0,e.kt)("td",g({parentName:"tr"},{align:null})),(0,e.kt)("td",g({parentName:"tr"},{align:null})),(0,e.kt)("td",g({parentName:"tr"},{align:null})))))),(0,e.kt)("div",{class:"api-container-content api-container-content-function",markdown:"1"},(0,e.kt)("p",null,"Convert a given color from HSV (Hue, Saturation, Value) to colortype. "),(0,e.kt)("div",{class:"api-content-indented-header",markdown:"1"},"Parameters:"),(0,e.kt)("div",{class:"api-content-indented",markdown:"1"},(0,e.kt)("table",null,(0,e.kt)("thead",{parentName:"table"},(0,e.kt)("tr",{parentName:"thead"},(0,e.kt)("th",g({parentName:"tr"},{align:null})),(0,e.kt)("th",g({parentName:"tr"},{align:null})))),(0,e.kt)("tbody",{parentName:"table"},(0,e.kt)("tr",{parentName:"tbody"},(0,e.kt)("td",g({parentName:"tr"},{align:null}),"hue"),(0,e.kt)("td",g({parentName:"tr"},{align:null}),"The input Hue (0 to 255).")),(0,e.kt)("tr",{parentName:"tbody"},(0,e.kt)("td",g({parentName:"tr"},{align:null}),"saturation"),(0,e.kt)("td",g({parentName:"tr"},{align:null}),"The input Saturation (0 to 255).")),(0,e.kt)("tr",{parentName:"tbody"},(0,e.kt)("td",g({parentName:"tr"},{align:null}),"luminance"),(0,e.kt)("td",g({parentName:"tr"},{align:null}),"The input Value (0 to 255)."))))),(0,e.kt)("div",{class:"api-content-indented-header",markdown:"1"},"Returns:"),(0,e.kt)("div",{class:"api-content-indented",markdown:"1"},(0,e.kt)("p",null,"The colortype color.")),(0,e.kt)("div",{class:"api-note",markdown:"1"},(0,e.kt)("h5",null,"Note"),(0,e.kt)("p",null,"The conversion is an approximation. ")))),(0,e.kt)(l.Z,{url:"classtouchgfx_1_1_color#function-getcolorfrom24bithsv",mdxType:"DoxybookHeaderLink"}),(0,e.kt)("h3",g({},{id:"getcolorfrom24bithsv"}),"getColorFrom24BitHSV"),(0,e.kt)("div",{class:"api-container",markdown:"1"},(0,e.kt)("div",{class:"api-container-header api-container-header-function",markdown:"1"},(0,e.kt)("table",null,(0,e.kt)("thead",{parentName:"table"},(0,e.kt)("tr",{parentName:"thead"},(0,e.kt)("th",g({parentName:"tr"},{align:null})),(0,e.kt)("th",g({parentName:"tr"},{align:null})),(0,e.kt)("th",g({parentName:"tr"},{align:null})),(0,e.kt)("th",g({parentName:"tr"},{align:null})),(0,e.kt)("th",g({parentName:"tr"},{align:null})),(0,e.kt)("th",g({parentName:"tr"},{align:null})))),(0,e.kt)("tbody",{parentName:"table"},(0,e.kt)("tr",{parentName:"tbody"},(0,e.kt)("td",g({parentName:"tr"},{align:null}),"static","\xa0","colortype","\xa0",(0,e.kt)(r.Z,{to:"classtouchgfx_1_1_color#function-getcolorfrom24bithsv",mdxType:"Link"},"getColorFrom24BitHSV")),(0,e.kt)("td",g({parentName:"tr"},{align:null}),"("),(0,e.kt)("td",g({parentName:"tr"},{align:null}),"uint8_t"),(0,e.kt)("td",g({parentName:"tr"},{align:null}),"hue ,"),(0,e.kt)("td",g({parentName:"tr"},{align:null})),(0,e.kt)("td",g({parentName:"tr"},{align:null}))),(0,e.kt)("tr",{parentName:"tbody"},(0,e.kt)("td",g({parentName:"tr"},{align:null})),(0,e.kt)("td",g({parentName:"tr"},{align:null})),(0,e.kt)("td",g({parentName:"tr"},{align:null}),"uint8_t"),(0,e.kt)("td",g({parentName:"tr"},{align:null}),"saturation ,"),(0,e.kt)("td",g({parentName:"tr"},{align:null})),(0,e.kt)("td",g({parentName:"tr"},{align:null}))),(0,e.kt)("tr",{parentName:"tbody"},(0,e.kt)("td",g({parentName:"tr"},{align:null})),(0,e.kt)("td",g({parentName:"tr"},{align:null})),(0,e.kt)("td",g({parentName:"tr"},{align:null}),"uint8_t"),(0,e.kt)("td",g({parentName:"tr"},{align:null}),"value"),(0,e.kt)("td",g({parentName:"tr"},{align:null})),(0,e.kt)("td",g({parentName:"tr"},{align:null}))),(0,e.kt)("tr",{parentName:"tbody"},(0,e.kt)("td",g({parentName:"tr"},{align:null})),(0,e.kt)("td",g({parentName:"tr"},{align:null})),(0,e.kt)("td",g({parentName:"tr"},{align:null}),")"),(0,e.kt)("td",g({parentName:"tr"},{align:null})),(0,e.kt)("td",g({parentName:"tr"},{align:null})),(0,e.kt)("td",g({parentName:"tr"},{align:null})))))),(0,e.kt)("div",{class:"api-container-content api-container-content-function",markdown:"1"},(0,e.kt)("p",null,"Convert a given color from HSV (Hue, Saturation, Value) to colortype. "),(0,e.kt)("div",{class:"api-content-indented-header",markdown:"1"},"Parameters:"),(0,e.kt)("div",{class:"api-content-indented",markdown:"1"},(0,e.kt)("table",null,(0,e.kt)("thead",{parentName:"table"},(0,e.kt)("tr",{parentName:"thead"},(0,e.kt)("th",g({parentName:"tr"},{align:null})),(0,e.kt)("th",g({parentName:"tr"},{align:null})))),(0,e.kt)("tbody",{parentName:"table"},(0,e.kt)("tr",{parentName:"tbody"},(0,e.kt)("td",g({parentName:"tr"},{align:null}),"hue"),(0,e.kt)("td",g({parentName:"tr"},{align:null}),"The input Hue (0 to 255).")),(0,e.kt)("tr",{parentName:"tbody"},(0,e.kt)("td",g({parentName:"tr"},{align:null}),"saturation"),(0,e.kt)("td",g({parentName:"tr"},{align:null}),"The input Saturation (0 to 255).")),(0,e.kt)("tr",{parentName:"tbody"},(0,e.kt)("td",g({parentName:"tr"},{align:null}),"value"),(0,e.kt)("td",g({parentName:"tr"},{align:null}),"The input Value (0 to 255)."))))),(0,e.kt)("div",{class:"api-content-indented-header",markdown:"1"},"Returns:"),(0,e.kt)("div",{class:"api-content-indented",markdown:"1"},(0,e.kt)("p",null,"The colortype color. ")),(0,e.kt)("div",{class:"api-note",markdown:"1"},(0,e.kt)("h5",null,"Note"),(0,e.kt)("p",null,"The conversion is an approximation. ")))),(0,e.kt)(l.Z,{url:"classtouchgfx_1_1_color#function-getcolorfrom24bitrgb",mdxType:"DoxybookHeaderLink"}),(0,e.kt)("h3",g({},{id:"getcolorfrom24bitrgb"}),"getColorFrom24BitRGB"),(0,e.kt)("div",{class:"api-container",markdown:"1"},(0,e.kt)("div",{class:"api-container-header api-container-header-function",markdown:"1"},(0,e.kt)("table",null,(0,e.kt)("thead",{parentName:"table"},(0,e.kt)("tr",{parentName:"thead"},(0,e.kt)("th",g({parentName:"tr"},{align:null})),(0,e.kt)("th",g({parentName:"tr"},{align:null})),(0,e.kt)("th",g({parentName:"tr"},{align:null})),(0,e.kt)("th",g({parentName:"tr"},{align:null})),(0,e.kt)("th",g({parentName:"tr"},{align:null})),(0,e.kt)("th",g({parentName:"tr"},{align:null})))),(0,e.kt)("tbody",{parentName:"table"},(0,e.kt)("tr",{parentName:"tbody"},(0,e.kt)("td",g({parentName:"tr"},{align:null}),"static","\xa0","colortype","\xa0",(0,e.kt)(r.Z,{to:"classtouchgfx_1_1_color#function-getcolorfrom24bitrgb",mdxType:"Link"},"getColorFrom24BitRGB")),(0,e.kt)("td",g({parentName:"tr"},{align:null}),"("),(0,e.kt)("td",g({parentName:"tr"},{align:null}),"uint8_t"),(0,e.kt)("td",g({parentName:"tr"},{align:null}),"red ,"),(0,e.kt)("td",g({parentName:"tr"},{align:null})),(0,e.kt)("td",g({parentName:"tr"},{align:null}))),(0,e.kt)("tr",{parentName:"tbody"},(0,e.kt)("td",g({parentName:"tr"},{align:null})),(0,e.kt)("td",g({parentName:"tr"},{align:null})),(0,e.kt)("td",g({parentName:"tr"},{align:null}),"uint8_t"),(0,e.kt)("td",g({parentName:"tr"},{align:null}),"green ,"),(0,e.kt)("td",g({parentName:"tr"},{align:null})),(0,e.kt)("td",g({parentName:"tr"},{align:null}))),(0,e.kt)("tr",{parentName:"tbody"},(0,e.kt)("td",g({parentName:"tr"},{align:null})),(0,e.kt)("td",g({parentName:"tr"},{align:null})),(0,e.kt)("td",g({parentName:"tr"},{align:null}),"uint8_t"),(0,e.kt)("td",g({parentName:"tr"},{align:null}),"blue"),(0,e.kt)("td",g({parentName:"tr"},{align:null})),(0,e.kt)("td",g({parentName:"tr"},{align:null}))),(0,e.kt)("tr",{parentName:"tbody"},(0,e.kt)("td",g({parentName:"tr"},{align:null})),(0,e.kt)("td",g({parentName:"tr"},{align:null})),(0,e.kt)("td",g({parentName:"tr"},{align:null}),")"),(0,e.kt)("td",g({parentName:"tr"},{align:null})),(0,e.kt)("td",g({parentName:"tr"},{align:null})),(0,e.kt)("td",g({parentName:"tr"},{align:null})))))),(0,e.kt)("div",{class:"api-container-content api-container-content-function",markdown:"1"},(0,e.kt)("p",null,"Generates a color representation to be used on the LCD, based on 24 bit RGB values. "),(0,e.kt)("p",null,"Depending on your display color bit depth, the color might be interpreted internally as fewer than 24 bits with a loss of color precision."),(0,e.kt)("div",{class:"api-content-indented-header",markdown:"1"},"Parameters:"),(0,e.kt)("div",{class:"api-content-indented",markdown:"1"},(0,e.kt)("table",null,(0,e.kt)("thead",{parentName:"table"},(0,e.kt)("tr",{parentName:"thead"},(0,e.kt)("th",g({parentName:"tr"},{align:null})),(0,e.kt)("th",g({parentName:"tr"},{align:null})))),(0,e.kt)("tbody",{parentName:"table"},(0,e.kt)("tr",{parentName:"tbody"},(0,e.kt)("td",g({parentName:"tr"},{align:null}),"red"),(0,e.kt)("td",g({parentName:"tr"},{align:null}),"Value of the red part (0-255).")),(0,e.kt)("tr",{parentName:"tbody"},(0,e.kt)("td",g({parentName:"tr"},{align:null}),"green"),(0,e.kt)("td",g({parentName:"tr"},{align:null}),"Value of the green part (0-255).")),(0,e.kt)("tr",{parentName:"tbody"},(0,e.kt)("td",g({parentName:"tr"},{align:null}),"blue"),(0,e.kt)("td",g({parentName:"tr"},{align:null}),"Value of the blue part (0-255)."))))),(0,e.kt)("div",{class:"api-content-indented-header",markdown:"1"},"Returns:"),(0,e.kt)("div",{class:"api-content-indented",markdown:"1"},(0,e.kt)("p",null,"The color representation depending on ",(0,e.kt)("a",g({parentName:"p"},{href:"classtouchgfx_1_1_l_c_d"}),"LCD")," color format.")),(0,e.kt)("div",{class:"api-note",markdown:"1"},(0,e.kt)("h5",null,"Note"),(0,e.kt)("p",null,"This function is not available to call before the ",(0,e.kt)("a",g({parentName:"p"},{href:"classtouchgfx_1_1_l_c_d"}),"LCD")," has been setup, because the color depth is required. Consider using the function getColorFromRGB for a specific class, e.g. LCD16::getColorFromRGB(). ")),(0,e.kt)("div",{class:"api-content-indented-header",markdown:"1"},"See also:"),(0,e.kt)("div",{class:"api-content-indented",markdown:"1"},(0,e.kt)("p",null,(0,e.kt)("a",g({parentName:"p"},{href:"classtouchgfx_1_1_l_c_d#function-getcolorfrom24bitrgb"}),"LCD::getColorFrom24BitRGB"),", ",(0,e.kt)("a",g({parentName:"p"},{href:"classtouchgfx_1_1_l_c_d16bpp#function-getcolorfromrgb"}),"LCD16bpp::getColorFromRGB"))))),(0,e.kt)(l.Z,{url:"classtouchgfx_1_1_color#function-getgreencolor",mdxType:"DoxybookHeaderLink"}),(0,e.kt)("h3",g({},{id:"getgreencolor"}),"getGreenColor"),(0,e.kt)("div",{class:"api-container",markdown:"1"},(0,e.kt)("div",{class:"api-container-header api-container-header-function",markdown:"1"},(0,e.kt)("table",null,(0,e.kt)("thead",{parentName:"table"},(0,e.kt)("tr",{parentName:"thead"},(0,e.kt)("th",g({parentName:"tr"},{align:null})),(0,e.kt)("th",g({parentName:"tr"},{align:null})),(0,e.kt)("th",g({parentName:"tr"},{align:null})),(0,e.kt)("th",g({parentName:"tr"},{align:null})),(0,e.kt)("th",g({parentName:"tr"},{align:null})),(0,e.kt)("th",g({parentName:"tr"},{align:null})))),(0,e.kt)("tbody",{parentName:"table"},(0,e.kt)("tr",{parentName:"tbody"},(0,e.kt)("td",g({parentName:"tr"},{align:null}),"static","\xa0","FORCE_INLINE_FUNCTION uint8_t","\xa0",(0,e.kt)(r.Z,{to:"classtouchgfx_1_1_color#function-getgreencolor",mdxType:"Link"},"getGreenColor")),(0,e.kt)("td",g({parentName:"tr"},{align:null}),"("),(0,e.kt)("td",g({parentName:"tr"},{align:null}),(0,e.kt)("a",g({parentName:"td"},{href:"structtouchgfx_1_1colortype"}),"colortype")),(0,e.kt)("td",g({parentName:"tr"},{align:null}),"color"),(0,e.kt)("td",g({parentName:"tr"},{align:null}),")"),(0,e.kt)("td",g({parentName:"tr"},{align:null}))),(0,e.kt)("tr",{parentName:"tbody"},(0,e.kt)("td",g({parentName:"tr"},{align:null})),(0,e.kt)("td",g({parentName:"tr"},{align:null})),(0,e.kt)("td",g({parentName:"tr"},{align:null})),(0,e.kt)("td",g({parentName:"tr"},{align:null})),(0,e.kt)("td",g({parentName:"tr"},{align:null})),(0,e.kt)("td",g({parentName:"tr"},{align:null})))))),(0,e.kt)("div",{class:"api-container-content api-container-content-function",markdown:"1"},(0,e.kt)("p",null,"Gets the green color part of a color. "),(0,e.kt)("p",null,"As this function must work for all color depths, it can be somewhat slow if used in speed critical sections. Consider finding the color in another way, if possible. If the color depth of the display is known, consider using function getGreenFromColor() from the current ",(0,e.kt)("a",g({parentName:"p"},{href:"classtouchgfx_1_1_l_c_d"}),"LCD"),"."),(0,e.kt)("div",{class:"api-content-indented-header",markdown:"1"},"Parameters:"),(0,e.kt)("div",{class:"api-content-indented",markdown:"1"},(0,e.kt)("table",null,(0,e.kt)("thead",{parentName:"table"},(0,e.kt)("tr",{parentName:"thead"},(0,e.kt)("th",g({parentName:"tr"},{align:null})),(0,e.kt)("th",g({parentName:"tr"},{align:null})))),(0,e.kt)("tbody",{parentName:"table"},(0,e.kt)("tr",{parentName:"tbody"},(0,e.kt)("td",g({parentName:"tr"},{align:null}),"color"),(0,e.kt)("td",g({parentName:"tr"},{align:null}),"The color value."))))),(0,e.kt)("div",{class:"api-content-indented-header",markdown:"1"},"Returns:"),(0,e.kt)("div",{class:"api-content-indented",markdown:"1"},(0,e.kt)("p",null,"The green part of the color.")),(0,e.kt)("div",{class:"api-content-indented-header",markdown:"1"},"See also:"),(0,e.kt)("div",{class:"api-content-indented",markdown:"1"},(0,e.kt)("p",null,(0,e.kt)("a",g({parentName:"p"},{href:"classtouchgfx_1_1_l_c_d16bpp#function-getgreenfromcolor"}),"LCD16bpp::getGreenFromColor"))))),(0,e.kt)(l.Z,{url:"classtouchgfx_1_1_color#function-gethslfrom24bitrgb",mdxType:"DoxybookHeaderLink"}),(0,e.kt)("h3",g({},{id:"gethslfrom24bitrgb"}),"getHSLFrom24BitRGB"),(0,e.kt)("div",{class:"api-container",markdown:"1"},(0,e.kt)("div",{class:"api-container-header api-container-header-function",markdown:"1"},(0,e.kt)("table",null,(0,e.kt)("thead",{parentName:"table"},(0,e.kt)("tr",{parentName:"thead"},(0,e.kt)("th",g({parentName:"tr"},{align:null})),(0,e.kt)("th",g({parentName:"tr"},{align:null})),(0,e.kt)("th",g({parentName:"tr"},{align:null})),(0,e.kt)("th",g({parentName:"tr"},{align:null})),(0,e.kt)("th",g({parentName:"tr"},{align:null})),(0,e.kt)("th",g({parentName:"tr"},{align:null})))),(0,e.kt)("tbody",{parentName:"table"},(0,e.kt)("tr",{parentName:"tbody"},(0,e.kt)("td",g({parentName:"tr"},{align:null}),"static","\xa0","void","\xa0",(0,e.kt)(r.Z,{to:"classtouchgfx_1_1_color#function-gethslfrom24bitrgb",mdxType:"Link"},"getHSLFrom24BitRGB")),(0,e.kt)("td",g({parentName:"tr"},{align:null}),"("),(0,e.kt)("td",g({parentName:"tr"},{align:null}),"uint8_t"),(0,e.kt)("td",g({parentName:"tr"},{align:null}),"red ,"),(0,e.kt)("td",g({parentName:"tr"},{align:null})),(0,e.kt)("td",g({parentName:"tr"},{align:null}))),(0,e.kt)("tr",{parentName:"tbody"},(0,e.kt)("td",g({parentName:"tr"},{align:null})),(0,e.kt)("td",g({parentName:"tr"},{align:null})),(0,e.kt)("td",g({parentName:"tr"},{align:null}),"uint8_t"),(0,e.kt)("td",g({parentName:"tr"},{align:null}),"green ,"),(0,e.kt)("td",g({parentName:"tr"},{align:null})),(0,e.kt)("td",g({parentName:"tr"},{align:null}))),(0,e.kt)("tr",{parentName:"tbody"},(0,e.kt)("td",g({parentName:"tr"},{align:null})),(0,e.kt)("td",g({parentName:"tr"},{align:null})),(0,e.kt)("td",g({parentName:"tr"},{align:null}),"uint8_t"),(0,e.kt)("td",g({parentName:"tr"},{align:null}),"blue ,"),(0,e.kt)("td",g({parentName:"tr"},{align:null})),(0,e.kt)("td",g({parentName:"tr"},{align:null}))),(0,e.kt)("tr",{parentName:"tbody"},(0,e.kt)("td",g({parentName:"tr"},{align:null})),(0,e.kt)("td",g({parentName:"tr"},{align:null})),(0,e.kt)("td",g({parentName:"tr"},{align:null}),"uint8_t &"),(0,e.kt)("td",g({parentName:"tr"},{align:null}),"hue ,"),(0,e.kt)("td",g({parentName:"tr"},{align:null})),(0,e.kt)("td",g({parentName:"tr"},{align:null}))),(0,e.kt)("tr",{parentName:"tbody"},(0,e.kt)("td",g({parentName:"tr"},{align:null})),(0,e.kt)("td",g({parentName:"tr"},{align:null})),(0,e.kt)("td",g({parentName:"tr"},{align:null}),"uint8_t &"),(0,e.kt)("td",g({parentName:"tr"},{align:null}),"saturation ,"),(0,e.kt)("td",g({parentName:"tr"},{align:null})),(0,e.kt)("td",g({parentName:"tr"},{align:null}))),(0,e.kt)("tr",{parentName:"tbody"},(0,e.kt)("td",g({parentName:"tr"},{align:null})),(0,e.kt)("td",g({parentName:"tr"},{align:null})),(0,e.kt)("td",g({parentName:"tr"},{align:null}),"uint8_t &"),(0,e.kt)("td",g({parentName:"tr"},{align:null}),"luminance"),(0,e.kt)("td",g({parentName:"tr"},{align:null})),(0,e.kt)("td",g({parentName:"tr"},{align:null}))),(0,e.kt)("tr",{parentName:"tbody"},(0,e.kt)("td",g({parentName:"tr"},{align:null})),(0,e.kt)("td",g({parentName:"tr"},{align:null})),(0,e.kt)("td",g({parentName:"tr"},{align:null}),")"),(0,e.kt)("td",g({parentName:"tr"},{align:null})),(0,e.kt)("td",g({parentName:"tr"},{align:null})),(0,e.kt)("td",g({parentName:"tr"},{align:null})))))),(0,e.kt)("div",{class:"api-container-content api-container-content-function",markdown:"1"},(0,e.kt)("p",null,"Convert a given color from RGB (Red, Green, Blue) to HSV (Hue, Saturation, Value). "),(0,e.kt)("div",{class:"api-content-indented-header",markdown:"1"},"Parameters:"),(0,e.kt)("div",{class:"api-content-indented",markdown:"1"},(0,e.kt)("table",null,(0,e.kt)("thead",{parentName:"table"},(0,e.kt)("tr",{parentName:"thead"},(0,e.kt)("th",g({parentName:"tr"},{align:null})),(0,e.kt)("th",g({parentName:"tr"},{align:null})))),(0,e.kt)("tbody",{parentName:"table"},(0,e.kt)("tr",{parentName:"tbody"},(0,e.kt)("td",g({parentName:"tr"},{align:null}),"red"),(0,e.kt)("td",g({parentName:"tr"},{align:null}),"The input Red (0 to 255).")),(0,e.kt)("tr",{parentName:"tbody"},(0,e.kt)("td",g({parentName:"tr"},{align:null}),"green"),(0,e.kt)("td",g({parentName:"tr"},{align:null}),"The input Green (0 to 255).")),(0,e.kt)("tr",{parentName:"tbody"},(0,e.kt)("td",g({parentName:"tr"},{align:null}),"blue"),(0,e.kt)("td",g({parentName:"tr"},{align:null}),"The input Blue (0 to 255).")),(0,e.kt)("tr",{parentName:"tbody"},(0,e.kt)("td",g({parentName:"tr"},{align:null}),"hue"),(0,e.kt)("td",g({parentName:"tr"},{align:null}),"The output Hue (0 to 255).")),(0,e.kt)("tr",{parentName:"tbody"},(0,e.kt)("td",g({parentName:"tr"},{align:null}),"saturation"),(0,e.kt)("td",g({parentName:"tr"},{align:null}),"The output Saturation (0 to 255).")),(0,e.kt)("tr",{parentName:"tbody"},(0,e.kt)("td",g({parentName:"tr"},{align:null}),"luminance"),(0,e.kt)("td",g({parentName:"tr"},{align:null}),"The output Value (0 to 255)."))))),(0,e.kt)("div",{class:"api-note",markdown:"1"},(0,e.kt)("h5",null,"Note"),(0,e.kt)("p",null,"The conversion is an approximation. ")))),(0,e.kt)(l.Z,{url:"classtouchgfx_1_1_color#function-gethslfromcolor",mdxType:"DoxybookHeaderLink"}),(0,e.kt)("h3",g({},{id:"gethslfromcolor"}),"getHSLFromColor"),(0,e.kt)("div",{class:"api-container",markdown:"1"},(0,e.kt)("div",{class:"api-container-header api-container-header-function",markdown:"1"},(0,e.kt)("table",null,(0,e.kt)("thead",{parentName:"table"},(0,e.kt)("tr",{parentName:"thead"},(0,e.kt)("th",g({parentName:"tr"},{align:null})),(0,e.kt)("th",g({parentName:"tr"},{align:null})),(0,e.kt)("th",g({parentName:"tr"},{align:null})),(0,e.kt)("th",g({parentName:"tr"},{align:null})),(0,e.kt)("th",g({parentName:"tr"},{align:null})),(0,e.kt)("th",g({parentName:"tr"},{align:null})))),(0,e.kt)("tbody",{parentName:"table"},(0,e.kt)("tr",{parentName:"tbody"},(0,e.kt)("td",g({parentName:"tr"},{align:null}),"static","\xa0","void","\xa0",(0,e.kt)(r.Z,{to:"classtouchgfx_1_1_color#function-gethslfromcolor",mdxType:"Link"},"getHSLFromColor")),(0,e.kt)("td",g({parentName:"tr"},{align:null}),"("),(0,e.kt)("td",g({parentName:"tr"},{align:null}),(0,e.kt)("a",g({parentName:"td"},{href:"structtouchgfx_1_1colortype"}),"colortype")),(0,e.kt)("td",g({parentName:"tr"},{align:null}),"color ,"),(0,e.kt)("td",g({parentName:"tr"},{align:null})),(0,e.kt)("td",g({parentName:"tr"},{align:null}))),(0,e.kt)("tr",{parentName:"tbody"},(0,e.kt)("td",g({parentName:"tr"},{align:null})),(0,e.kt)("td",g({parentName:"tr"},{align:null})),(0,e.kt)("td",g({parentName:"tr"},{align:null}),"uint8_t &"),(0,e.kt)("td",g({parentName:"tr"},{align:null}),"hue ,"),(0,e.kt)("td",g({parentName:"tr"},{align:null})),(0,e.kt)("td",g({parentName:"tr"},{align:null}))),(0,e.kt)("tr",{parentName:"tbody"},(0,e.kt)("td",g({parentName:"tr"},{align:null})),(0,e.kt)("td",g({parentName:"tr"},{align:null})),(0,e.kt)("td",g({parentName:"tr"},{align:null}),"uint8_t &"),(0,e.kt)("td",g({parentName:"tr"},{align:null}),"saturation ,"),(0,e.kt)("td",g({parentName:"tr"},{align:null})),(0,e.kt)("td",g({parentName:"tr"},{align:null}))),(0,e.kt)("tr",{parentName:"tbody"},(0,e.kt)("td",g({parentName:"tr"},{align:null})),(0,e.kt)("td",g({parentName:"tr"},{align:null})),(0,e.kt)("td",g({parentName:"tr"},{align:null}),"uint8_t &"),(0,e.kt)("td",g({parentName:"tr"},{align:null}),"luminance"),(0,e.kt)("td",g({parentName:"tr"},{align:null})),(0,e.kt)("td",g({parentName:"tr"},{align:null}))),(0,e.kt)("tr",{parentName:"tbody"},(0,e.kt)("td",g({parentName:"tr"},{align:null})),(0,e.kt)("td",g({parentName:"tr"},{align:null})),(0,e.kt)("td",g({parentName:"tr"},{align:null}),")"),(0,e.kt)("td",g({parentName:"tr"},{align:null})),(0,e.kt)("td",g({parentName:"tr"},{align:null})),(0,e.kt)("td",g({parentName:"tr"},{align:null})))))),(0,e.kt)("div",{class:"api-container-content api-container-content-function",markdown:"1"},(0,e.kt)("p",null,"Convert a given colortype color to HSV (Hue, Saturation, Value). "),(0,e.kt)("div",{class:"api-content-indented-header",markdown:"1"},"Parameters:"),(0,e.kt)("div",{class:"api-content-indented",markdown:"1"},(0,e.kt)("table",null,(0,e.kt)("thead",{parentName:"table"},(0,e.kt)("tr",{parentName:"thead"},(0,e.kt)("th",g({parentName:"tr"},{align:null})),(0,e.kt)("th",g({parentName:"tr"},{align:null})))),(0,e.kt)("tbody",{parentName:"table"},(0,e.kt)("tr",{parentName:"tbody"},(0,e.kt)("td",g({parentName:"tr"},{align:null}),"color"),(0,e.kt)("td",g({parentName:"tr"},{align:null}),"The input color.")),(0,e.kt)("tr",{parentName:"tbody"},(0,e.kt)("td",g({parentName:"tr"},{align:null}),"hue"),(0,e.kt)("td",g({parentName:"tr"},{align:null}),"The output Hue (0 to 255).")),(0,e.kt)("tr",{parentName:"tbody"},(0,e.kt)("td",g({parentName:"tr"},{align:null}),"saturation"),(0,e.kt)("td",g({parentName:"tr"},{align:null}),"The output Saturation (0 to 255).")),(0,e.kt)("tr",{parentName:"tbody"},(0,e.kt)("td",g({parentName:"tr"},{align:null}),"luminance"),(0,e.kt)("td",g({parentName:"tr"},{align:null}),"The output Value (0 to 255)."))))),(0,e.kt)("div",{class:"api-note",markdown:"1"},(0,e.kt)("h5",null,"Note"),(0,e.kt)("p",null,"The conversion is an approximation. ")))),(0,e.kt)(l.Z,{url:"classtouchgfx_1_1_color#function-gethslfromhsv",mdxType:"DoxybookHeaderLink"}),(0,e.kt)("h3",g({},{id:"gethslfromhsv"}),"getHSLFromHSV"),(0,e.kt)("div",{class:"api-container",markdown:"1"},(0,e.kt)("div",{class:"api-container-header api-container-header-function",markdown:"1"},(0,e.kt)("table",null,(0,e.kt)("thead",{parentName:"table"},(0,e.kt)("tr",{parentName:"thead"},(0,e.kt)("th",g({parentName:"tr"},{align:null})),(0,e.kt)("th",g({parentName:"tr"},{align:null})),(0,e.kt)("th",g({parentName:"tr"},{align:null})),(0,e.kt)("th",g({parentName:"tr"},{align:null})),(0,e.kt)("th",g({parentName:"tr"},{align:null})),(0,e.kt)("th",g({parentName:"tr"},{align:null})))),(0,e.kt)("tbody",{parentName:"table"},(0,e.kt)("tr",{parentName:"tbody"},(0,e.kt)("td",g({parentName:"tr"},{align:null}),"static","\xa0","void","\xa0",(0,e.kt)(r.Z,{to:"classtouchgfx_1_1_color#function-gethslfromhsv",mdxType:"Link"},"getHSLFromHSV")),(0,e.kt)("td",g({parentName:"tr"},{align:null}),"("),(0,e.kt)("td",g({parentName:"tr"},{align:null}),"uint8_t"),(0,e.kt)("td",g({parentName:"tr"},{align:null}),"hue ,"),(0,e.kt)("td",g({parentName:"tr"},{align:null})),(0,e.kt)("td",g({parentName:"tr"},{align:null}))),(0,e.kt)("tr",{parentName:"tbody"},(0,e.kt)("td",g({parentName:"tr"},{align:null})),(0,e.kt)("td",g({parentName:"tr"},{align:null})),(0,e.kt)("td",g({parentName:"tr"},{align:null}),"uint8_t &"),(0,e.kt)("td",g({parentName:"tr"},{align:null}),"saturation ,"),(0,e.kt)("td",g({parentName:"tr"},{align:null})),(0,e.kt)("td",g({parentName:"tr"},{align:null}))),(0,e.kt)("tr",{parentName:"tbody"},(0,e.kt)("td",g({parentName:"tr"},{align:null})),(0,e.kt)("td",g({parentName:"tr"},{align:null})),(0,e.kt)("td",g({parentName:"tr"},{align:null}),"uint8_t"),(0,e.kt)("td",g({parentName:"tr"},{align:null}),"value ,"),(0,e.kt)("td",g({parentName:"tr"},{align:null})),(0,e.kt)("td",g({parentName:"tr"},{align:null}))),(0,e.kt)("tr",{parentName:"tbody"},(0,e.kt)("td",g({parentName:"tr"},{align:null})),(0,e.kt)("td",g({parentName:"tr"},{align:null})),(0,e.kt)("td",g({parentName:"tr"},{align:null}),"uint8_t &"),(0,e.kt)("td",g({parentName:"tr"},{align:null}),"luminance"),(0,e.kt)("td",g({parentName:"tr"},{align:null})),(0,e.kt)("td",g({parentName:"tr"},{align:null}))),(0,e.kt)("tr",{parentName:"tbody"},(0,e.kt)("td",g({parentName:"tr"},{align:null})),(0,e.kt)("td",g({parentName:"tr"},{align:null})),(0,e.kt)("td",g({parentName:"tr"},{align:null}),")"),(0,e.kt)("td",g({parentName:"tr"},{align:null})),(0,e.kt)("td",g({parentName:"tr"},{align:null})),(0,e.kt)("td",g({parentName:"tr"},{align:null})))))),(0,e.kt)("div",{class:"api-container-content api-container-content-function",markdown:"1"},(0,e.kt)("p",null,"Convert HSV (Hue, Saturation, Value) to HSL (Hue, Saturation, Luminance). "),(0,e.kt)("p",null,"The Hue is unaltered, the Saturation is changed and the Luminance is calculated."),(0,e.kt)("div",{class:"api-content-indented-header",markdown:"1"},"Parameters:"),(0,e.kt)("div",{class:"api-content-indented",markdown:"1"},(0,e.kt)("table",null,(0,e.kt)("thead",{parentName:"table"},(0,e.kt)("tr",{parentName:"thead"},(0,e.kt)("th",g({parentName:"tr"},{align:null})),(0,e.kt)("th",g({parentName:"tr"},{align:null})))),(0,e.kt)("tbody",{parentName:"table"},(0,e.kt)("tr",{parentName:"tbody"},(0,e.kt)("td",g({parentName:"tr"},{align:null}),"hue"),(0,e.kt)("td",g({parentName:"tr"},{align:null}),"The hue (0 to 255).")),(0,e.kt)("tr",{parentName:"tbody"},(0,e.kt)("td",g({parentName:"tr"},{align:null}),"saturation"),(0,e.kt)("td",g({parentName:"tr"},{align:null}),"The saturation (0 to 255).")),(0,e.kt)("tr",{parentName:"tbody"},(0,e.kt)("td",g({parentName:"tr"},{align:null}),"value"),(0,e.kt)("td",g({parentName:"tr"},{align:null}),"The value (0 to 255).")),(0,e.kt)("tr",{parentName:"tbody"},(0,e.kt)("td",g({parentName:"tr"},{align:null}),"luminance"),(0,e.kt)("td",g({parentName:"tr"},{align:null}),"The luminance (0 to 255)."))))))),(0,e.kt)(l.Z,{url:"classtouchgfx_1_1_color#function-gethsvfrom24bitrgb",mdxType:"DoxybookHeaderLink"}),(0,e.kt)("h3",g({},{id:"gethsvfrom24bitrgb"}),"getHSVFrom24BitRGB"),(0,e.kt)("div",{class:"api-container",markdown:"1"},(0,e.kt)("div",{class:"api-container-header api-container-header-function",markdown:"1"},(0,e.kt)("table",null,(0,e.kt)("thead",{parentName:"table"},(0,e.kt)("tr",{parentName:"thead"},(0,e.kt)("th",g({parentName:"tr"},{align:null})),(0,e.kt)("th",g({parentName:"tr"},{align:null})),(0,e.kt)("th",g({parentName:"tr"},{align:null})),(0,e.kt)("th",g({parentName:"tr"},{align:null})),(0,e.kt)("th",g({parentName:"tr"},{align:null})),(0,e.kt)("th",g({parentName:"tr"},{align:null})))),(0,e.kt)("tbody",{parentName:"table"},(0,e.kt)("tr",{parentName:"tbody"},(0,e.kt)("td",g({parentName:"tr"},{align:null}),"static","\xa0","void","\xa0",(0,e.kt)(r.Z,{to:"classtouchgfx_1_1_color#function-gethsvfrom24bitrgb",mdxType:"Link"},"getHSVFrom24BitRGB")),(0,e.kt)("td",g({parentName:"tr"},{align:null}),"("),(0,e.kt)("td",g({parentName:"tr"},{align:null}),"uint8_t"),(0,e.kt)("td",g({parentName:"tr"},{align:null}),"red ,"),(0,e.kt)("td",g({parentName:"tr"},{align:null})),(0,e.kt)("td",g({parentName:"tr"},{align:null}))),(0,e.kt)("tr",{parentName:"tbody"},(0,e.kt)("td",g({parentName:"tr"},{align:null})),(0,e.kt)("td",g({parentName:"tr"},{align:null})),(0,e.kt)("td",g({parentName:"tr"},{align:null}),"uint8_t"),(0,e.kt)("td",g({parentName:"tr"},{align:null}),"green ,"),(0,e.kt)("td",g({parentName:"tr"},{align:null})),(0,e.kt)("td",g({parentName:"tr"},{align:null}))),(0,e.kt)("tr",{parentName:"tbody"},(0,e.kt)("td",g({parentName:"tr"},{align:null})),(0,e.kt)("td",g({parentName:"tr"},{align:null})),(0,e.kt)("td",g({parentName:"tr"},{align:null}),"uint8_t"),(0,e.kt)("td",g({parentName:"tr"},{align:null}),"blue ,"),(0,e.kt)("td",g({parentName:"tr"},{align:null})),(0,e.kt)("td",g({parentName:"tr"},{align:null}))),(0,e.kt)("tr",{parentName:"tbody"},(0,e.kt)("td",g({parentName:"tr"},{align:null})),(0,e.kt)("td",g({parentName:"tr"},{align:null})),(0,e.kt)("td",g({parentName:"tr"},{align:null}),"uint8_t &"),(0,e.kt)("td",g({parentName:"tr"},{align:null}),"hue ,"),(0,e.kt)("td",g({parentName:"tr"},{align:null})),(0,e.kt)("td",g({parentName:"tr"},{align:null}))),(0,e.kt)("tr",{parentName:"tbody"},(0,e.kt)("td",g({parentName:"tr"},{align:null})),(0,e.kt)("td",g({parentName:"tr"},{align:null})),(0,e.kt)("td",g({parentName:"tr"},{align:null}),"uint8_t &"),(0,e.kt)("td",g({parentName:"tr"},{align:null}),"saturation ,"),(0,e.kt)("td",g({parentName:"tr"},{align:null})),(0,e.kt)("td",g({parentName:"tr"},{align:null}))),(0,e.kt)("tr",{parentName:"tbody"},(0,e.kt)("td",g({parentName:"tr"},{align:null})),(0,e.kt)("td",g({parentName:"tr"},{align:null})),(0,e.kt)("td",g({parentName:"tr"},{align:null}),"uint8_t &"),(0,e.kt)("td",g({parentName:"tr"},{align:null}),"value"),(0,e.kt)("td",g({parentName:"tr"},{align:null})),(0,e.kt)("td",g({parentName:"tr"},{align:null}))),(0,e.kt)("tr",{parentName:"tbody"},(0,e.kt)("td",g({parentName:"tr"},{align:null})),(0,e.kt)("td",g({parentName:"tr"},{align:null})),(0,e.kt)("td",g({parentName:"tr"},{align:null}),")"),(0,e.kt)("td",g({parentName:"tr"},{align:null})),(0,e.kt)("td",g({parentName:"tr"},{align:null})),(0,e.kt)("td",g({parentName:"tr"},{align:null})))))),(0,e.kt)("div",{class:"api-container-content api-container-content-function",markdown:"1"},(0,e.kt)("p",null,"Convert a given color from RGB (Red, Green, Blue) to HSV (Hue, Saturation, Value). "),(0,e.kt)("div",{class:"api-content-indented-header",markdown:"1"},"Parameters:"),(0,e.kt)("div",{class:"api-content-indented",markdown:"1"},(0,e.kt)("table",null,(0,e.kt)("thead",{parentName:"table"},(0,e.kt)("tr",{parentName:"thead"},(0,e.kt)("th",g({parentName:"tr"},{align:null})),(0,e.kt)("th",g({parentName:"tr"},{align:null})))),(0,e.kt)("tbody",{parentName:"table"},(0,e.kt)("tr",{parentName:"tbody"},(0,e.kt)("td",g({parentName:"tr"},{align:null}),"red"),(0,e.kt)("td",g({parentName:"tr"},{align:null}),"The input Red.")),(0,e.kt)("tr",{parentName:"tbody"},(0,e.kt)("td",g({parentName:"tr"},{align:null}),"green"),(0,e.kt)("td",g({parentName:"tr"},{align:null}),"The input Green.")),(0,e.kt)("tr",{parentName:"tbody"},(0,e.kt)("td",g({parentName:"tr"},{align:null}),"blue"),(0,e.kt)("td",g({parentName:"tr"},{align:null}),"The input Blue.")),(0,e.kt)("tr",{parentName:"tbody"},(0,e.kt)("td",g({parentName:"tr"},{align:null}),"hue"),(0,e.kt)("td",g({parentName:"tr"},{align:null}),"The output Hue.")),(0,e.kt)("tr",{parentName:"tbody"},(0,e.kt)("td",g({parentName:"tr"},{align:null}),"saturation"),(0,e.kt)("td",g({parentName:"tr"},{align:null}),"The output Saturation.")),(0,e.kt)("tr",{parentName:"tbody"},(0,e.kt)("td",g({parentName:"tr"},{align:null}),"value"),(0,e.kt)("td",g({parentName:"tr"},{align:null}),"The output Value."))))),(0,e.kt)("div",{class:"api-note",markdown:"1"},(0,e.kt)("h5",null,"Note"),(0,e.kt)("p",null,"The conversion is an approximation. ")))),(0,e.kt)(l.Z,{url:"classtouchgfx_1_1_color#function-gethsvfromcolor",mdxType:"DoxybookHeaderLink"}),(0,e.kt)("h3",g({},{id:"gethsvfromcolor"}),"getHSVFromColor"),(0,e.kt)("div",{class:"api-container",markdown:"1"},(0,e.kt)("div",{class:"api-container-header api-container-header-function",markdown:"1"},(0,e.kt)("table",null,(0,e.kt)("thead",{parentName:"table"},(0,e.kt)("tr",{parentName:"thead"},(0,e.kt)("th",g({parentName:"tr"},{align:null})),(0,e.kt)("th",g({parentName:"tr"},{align:null})),(0,e.kt)("th",g({parentName:"tr"},{align:null})),(0,e.kt)("th",g({parentName:"tr"},{align:null})),(0,e.kt)("th",g({parentName:"tr"},{align:null})),(0,e.kt)("th",g({parentName:"tr"},{align:null})))),(0,e.kt)("tbody",{parentName:"table"},(0,e.kt)("tr",{parentName:"tbody"},(0,e.kt)("td",g({parentName:"tr"},{align:null}),"static","\xa0","void","\xa0",(0,e.kt)(r.Z,{to:"classtouchgfx_1_1_color#function-gethsvfromcolor",mdxType:"Link"},"getHSVFromColor")),(0,e.kt)("td",g({parentName:"tr"},{align:null}),"("),(0,e.kt)("td",g({parentName:"tr"},{align:null}),(0,e.kt)("a",g({parentName:"td"},{href:"structtouchgfx_1_1colortype"}),"colortype")),(0,e.kt)("td",g({parentName:"tr"},{align:null}),"color ,"),(0,e.kt)("td",g({parentName:"tr"},{align:null})),(0,e.kt)("td",g({parentName:"tr"},{align:null}))),(0,e.kt)("tr",{parentName:"tbody"},(0,e.kt)("td",g({parentName:"tr"},{align:null})),(0,e.kt)("td",g({parentName:"tr"},{align:null})),(0,e.kt)("td",g({parentName:"tr"},{align:null}),"uint8_t &"),(0,e.kt)("td",g({parentName:"tr"},{align:null}),"hue ,"),(0,e.kt)("td",g({parentName:"tr"},{align:null})),(0,e.kt)("td",g({parentName:"tr"},{align:null}))),(0,e.kt)("tr",{parentName:"tbody"},(0,e.kt)("td",g({parentName:"tr"},{align:null})),(0,e.kt)("td",g({parentName:"tr"},{align:null})),(0,e.kt)("td",g({parentName:"tr"},{align:null}),"uint8_t &"),(0,e.kt)("td",g({parentName:"tr"},{align:null}),"saturation ,"),(0,e.kt)("td",g({parentName:"tr"},{align:null})),(0,e.kt)("td",g({parentName:"tr"},{align:null}))),(0,e.kt)("tr",{parentName:"tbody"},(0,e.kt)("td",g({parentName:"tr"},{align:null})),(0,e.kt)("td",g({parentName:"tr"},{align:null})),(0,e.kt)("td",g({parentName:"tr"},{align:null}),"uint8_t &"),(0,e.kt)("td",g({parentName:"tr"},{align:null}),"value"),(0,e.kt)("td",g({parentName:"tr"},{align:null})),(0,e.kt)("td",g({parentName:"tr"},{align:null}))),(0,e.kt)("tr",{parentName:"tbody"},(0,e.kt)("td",g({parentName:"tr"},{align:null})),(0,e.kt)("td",g({parentName:"tr"},{align:null})),(0,e.kt)("td",g({parentName:"tr"},{align:null}),")"),(0,e.kt)("td",g({parentName:"tr"},{align:null})),(0,e.kt)("td",g({parentName:"tr"},{align:null})),(0,e.kt)("td",g({parentName:"tr"},{align:null})))))),(0,e.kt)("div",{class:"api-container-content api-container-content-function",markdown:"1"},(0,e.kt)("p",null,"Convert a given colortype color to HSV (Hue, Saturation, Value). "),(0,e.kt)("div",{class:"api-content-indented-header",markdown:"1"},"Parameters:"),(0,e.kt)("div",{class:"api-content-indented",markdown:"1"},(0,e.kt)("table",null,(0,e.kt)("thead",{parentName:"table"},(0,e.kt)("tr",{parentName:"thead"},(0,e.kt)("th",g({parentName:"tr"},{align:null})),(0,e.kt)("th",g({parentName:"tr"},{align:null})))),(0,e.kt)("tbody",{parentName:"table"},(0,e.kt)("tr",{parentName:"tbody"},(0,e.kt)("td",g({parentName:"tr"},{align:null}),"color"),(0,e.kt)("td",g({parentName:"tr"},{align:null}),"The input color.")),(0,e.kt)("tr",{parentName:"tbody"},(0,e.kt)("td",g({parentName:"tr"},{align:null}),"hue"),(0,e.kt)("td",g({parentName:"tr"},{align:null}),"The output Hue (0 to 255).")),(0,e.kt)("tr",{parentName:"tbody"},(0,e.kt)("td",g({parentName:"tr"},{align:null}),"saturation"),(0,e.kt)("td",g({parentName:"tr"},{align:null}),"The output Saturation (0 to 255).")),(0,e.kt)("tr",{parentName:"tbody"},(0,e.kt)("td",g({parentName:"tr"},{align:null}),"value"),(0,e.kt)("td",g({parentName:"tr"},{align:null}),"The output Value (0 to 255)."))))),(0,e.kt)("div",{class:"api-note",markdown:"1"},(0,e.kt)("h5",null,"Note"),(0,e.kt)("p",null,"The conversion is an approximation. ")))),(0,e.kt)(l.Z,{url:"classtouchgfx_1_1_color#function-gethsvfromhsl",mdxType:"DoxybookHeaderLink"}),(0,e.kt)("h3",g({},{id:"gethsvfromhsl"}),"getHSVFromHSL"),(0,e.kt)("div",{class:"api-container",markdown:"1"},(0,e.kt)("div",{class:"api-container-header api-container-header-function",markdown:"1"},(0,e.kt)("table",null,(0,e.kt)("thead",{parentName:"table"},(0,e.kt)("tr",{parentName:"thead"},(0,e.kt)("th",g({parentName:"tr"},{align:null})),(0,e.kt)("th",g({parentName:"tr"},{align:null})),(0,e.kt)("th",g({parentName:"tr"},{align:null})),(0,e.kt)("th",g({parentName:"tr"},{align:null})),(0,e.kt)("th",g({parentName:"tr"},{align:null})),(0,e.kt)("th",g({parentName:"tr"},{align:null})))),(0,e.kt)("tbody",{parentName:"table"},(0,e.kt)("tr",{parentName:"tbody"},(0,e.kt)("td",g({parentName:"tr"},{align:null}),"static","\xa0","void","\xa0",(0,e.kt)(r.Z,{to:"classtouchgfx_1_1_color#function-gethsvfromhsl",mdxType:"Link"},"getHSVFromHSL")),(0,e.kt)("td",g({parentName:"tr"},{align:null}),"("),(0,e.kt)("td",g({parentName:"tr"},{align:null}),"uint8_t"),(0,e.kt)("td",g({parentName:"tr"},{align:null}),"hue ,"),(0,e.kt)("td",g({parentName:"tr"},{align:null})),(0,e.kt)("td",g({parentName:"tr"},{align:null}))),(0,e.kt)("tr",{parentName:"tbody"},(0,e.kt)("td",g({parentName:"tr"},{align:null})),(0,e.kt)("td",g({parentName:"tr"},{align:null})),(0,e.kt)("td",g({parentName:"tr"},{align:null}),"uint8_t &"),(0,e.kt)("td",g({parentName:"tr"},{align:null}),"saturation ,"),(0,e.kt)("td",g({parentName:"tr"},{align:null})),(0,e.kt)("td",g({parentName:"tr"},{align:null}))),(0,e.kt)("tr",{parentName:"tbody"},(0,e.kt)("td",g({parentName:"tr"},{align:null})),(0,e.kt)("td",g({parentName:"tr"},{align:null})),(0,e.kt)("td",g({parentName:"tr"},{align:null}),"uint8_t"),(0,e.kt)("td",g({parentName:"tr"},{align:null}),"luminance ,"),(0,e.kt)("td",g({parentName:"tr"},{align:null})),(0,e.kt)("td",g({parentName:"tr"},{align:null}))),(0,e.kt)("tr",{parentName:"tbody"},(0,e.kt)("td",g({parentName:"tr"},{align:null})),(0,e.kt)("td",g({parentName:"tr"},{align:null})),(0,e.kt)("td",g({parentName:"tr"},{align:null}),"uint8_t &"),(0,e.kt)("td",g({parentName:"tr"},{align:null}),"value"),(0,e.kt)("td",g({parentName:"tr"},{align:null})),(0,e.kt)("td",g({parentName:"tr"},{align:null}))),(0,e.kt)("tr",{parentName:"tbody"},(0,e.kt)("td",g({parentName:"tr"},{align:null})),(0,e.kt)("td",g({parentName:"tr"},{align:null})),(0,e.kt)("td",g({parentName:"tr"},{align:null}),")"),(0,e.kt)("td",g({parentName:"tr"},{align:null})),(0,e.kt)("td",g({parentName:"tr"},{align:null})),(0,e.kt)("td",g({parentName:"tr"},{align:null})))))),(0,e.kt)("div",{class:"api-container-content api-container-content-function",markdown:"1"},(0,e.kt)("p",null,"Convert HSL (Hue, Saturation, Luminance) to HSV (Hue, Saturation, Value). "),(0,e.kt)("p",null,"The Hue is unaltered, the Saturation is changed and the Value is calculated."),(0,e.kt)("div",{class:"api-content-indented-header",markdown:"1"},"Parameters:"),(0,e.kt)("div",{class:"api-content-indented",markdown:"1"},(0,e.kt)("table",null,(0,e.kt)("thead",{parentName:"table"},(0,e.kt)("tr",{parentName:"thead"},(0,e.kt)("th",g({parentName:"tr"},{align:null})),(0,e.kt)("th",g({parentName:"tr"},{align:null})))),(0,e.kt)("tbody",{parentName:"table"},(0,e.kt)("tr",{parentName:"tbody"},(0,e.kt)("td",g({parentName:"tr"},{align:null}),"hue"),(0,e.kt)("td",g({parentName:"tr"},{align:null}),"The hue (0 to 255).")),(0,e.kt)("tr",{parentName:"tbody"},(0,e.kt)("td",g({parentName:"tr"},{align:null}),"saturation"),(0,e.kt)("td",g({parentName:"tr"},{align:null}),"The saturation (0 to 255).")),(0,e.kt)("tr",{parentName:"tbody"},(0,e.kt)("td",g({parentName:"tr"},{align:null}),"luminance"),(0,e.kt)("td",g({parentName:"tr"},{align:null}),"The luminance (0 to 255).")),(0,e.kt)("tr",{parentName:"tbody"},(0,e.kt)("td",g({parentName:"tr"},{align:null}),"value"),(0,e.kt)("td",g({parentName:"tr"},{align:null}),"The value (0 to 255)."))))))),(0,e.kt)(l.Z,{url:"classtouchgfx_1_1_color#function-getredcolor",mdxType:"DoxybookHeaderLink"}),(0,e.kt)("h3",g({},{id:"getredcolor"}),"getRedColor"),(0,e.kt)("div",{class:"api-container",markdown:"1"},(0,e.kt)("div",{class:"api-container-header api-container-header-function",markdown:"1"},(0,e.kt)("table",null,(0,e.kt)("thead",{parentName:"table"},(0,e.kt)("tr",{parentName:"thead"},(0,e.kt)("th",g({parentName:"tr"},{align:null})),(0,e.kt)("th",g({parentName:"tr"},{align:null})),(0,e.kt)("th",g({parentName:"tr"},{align:null})),(0,e.kt)("th",g({parentName:"tr"},{align:null})),(0,e.kt)("th",g({parentName:"tr"},{align:null})),(0,e.kt)("th",g({parentName:"tr"},{align:null})))),(0,e.kt)("tbody",{parentName:"table"},(0,e.kt)("tr",{parentName:"tbody"},(0,e.kt)("td",g({parentName:"tr"},{align:null}),"static","\xa0","FORCE_INLINE_FUNCTION uint8_t","\xa0",(0,e.kt)(r.Z,{to:"classtouchgfx_1_1_color#function-getredcolor",mdxType:"Link"},"getRedColor")),(0,e.kt)("td",g({parentName:"tr"},{align:null}),"("),(0,e.kt)("td",g({parentName:"tr"},{align:null}),(0,e.kt)("a",g({parentName:"td"},{href:"structtouchgfx_1_1colortype"}),"colortype")),(0,e.kt)("td",g({parentName:"tr"},{align:null}),"color"),(0,e.kt)("td",g({parentName:"tr"},{align:null}),")"),(0,e.kt)("td",g({parentName:"tr"},{align:null}))),(0,e.kt)("tr",{parentName:"tbody"},(0,e.kt)("td",g({parentName:"tr"},{align:null})),(0,e.kt)("td",g({parentName:"tr"},{align:null})),(0,e.kt)("td",g({parentName:"tr"},{align:null})),(0,e.kt)("td",g({parentName:"tr"},{align:null})),(0,e.kt)("td",g({parentName:"tr"},{align:null})),(0,e.kt)("td",g({parentName:"tr"},{align:null})))))),(0,e.kt)("div",{class:"api-container-content api-container-content-function",markdown:"1"},(0,e.kt)("p",null,"Gets the red color part of a color. "),(0,e.kt)("p",null,"As this function must work for all color depths, it can be somewhat slow if used in speed critical sections. Consider finding the color in another way, if possible. If the color depth of the display is known, consider using function getRedFromColor() from the current ",(0,e.kt)("a",g({parentName:"p"},{href:"classtouchgfx_1_1_l_c_d"}),"LCD"),"."),(0,e.kt)("div",{class:"api-content-indented-header",markdown:"1"},"Parameters:"),(0,e.kt)("div",{class:"api-content-indented",markdown:"1"},(0,e.kt)("table",null,(0,e.kt)("thead",{parentName:"table"},(0,e.kt)("tr",{parentName:"thead"},(0,e.kt)("th",g({parentName:"tr"},{align:null})),(0,e.kt)("th",g({parentName:"tr"},{align:null})))),(0,e.kt)("tbody",{parentName:"table"},(0,e.kt)("tr",{parentName:"tbody"},(0,e.kt)("td",g({parentName:"tr"},{align:null}),"color"),(0,e.kt)("td",g({parentName:"tr"},{align:null}),"The color value."))))),(0,e.kt)("div",{class:"api-content-indented-header",markdown:"1"},"Returns:"),(0,e.kt)("div",{class:"api-content-indented",markdown:"1"},(0,e.kt)("p",null,"The red part of the color.")),(0,e.kt)("div",{class:"api-content-indented-header",markdown:"1"},"See also:"),(0,e.kt)("div",{class:"api-content-indented",markdown:"1"},(0,e.kt)("p",null,(0,e.kt)("a",g({parentName:"p"},{href:"classtouchgfx_1_1_l_c_d16bpp#function-getredfromcolor"}),"LCD16bpp::getRedFromColor"))))),(0,e.kt)(l.Z,{url:"classtouchgfx_1_1_color#function-getrgbfrom24bithsl",mdxType:"DoxybookHeaderLink"}),(0,e.kt)("h3",g({},{id:"getrgbfrom24bithsl"}),"getRGBFrom24BitHSL"),(0,e.kt)("div",{class:"api-container",markdown:"1"},(0,e.kt)("div",{class:"api-container-header api-container-header-function",markdown:"1"},(0,e.kt)("table",null,(0,e.kt)("thead",{parentName:"table"},(0,e.kt)("tr",{parentName:"thead"},(0,e.kt)("th",g({parentName:"tr"},{align:null})),(0,e.kt)("th",g({parentName:"tr"},{align:null})),(0,e.kt)("th",g({parentName:"tr"},{align:null})),(0,e.kt)("th",g({parentName:"tr"},{align:null})),(0,e.kt)("th",g({parentName:"tr"},{align:null})),(0,e.kt)("th",g({parentName:"tr"},{align:null})))),(0,e.kt)("tbody",{parentName:"table"},(0,e.kt)("tr",{parentName:"tbody"},(0,e.kt)("td",g({parentName:"tr"},{align:null}),"static","\xa0","void","\xa0",(0,e.kt)(r.Z,{to:"classtouchgfx_1_1_color#function-getrgbfrom24bithsl",mdxType:"Link"},"getRGBFrom24BitHSL")),(0,e.kt)("td",g({parentName:"tr"},{align:null}),"("),(0,e.kt)("td",g({parentName:"tr"},{align:null}),"uint8_t"),(0,e.kt)("td",g({parentName:"tr"},{align:null}),"hue ,"),(0,e.kt)("td",g({parentName:"tr"},{align:null})),(0,e.kt)("td",g({parentName:"tr"},{align:null}))),(0,e.kt)("tr",{parentName:"tbody"},(0,e.kt)("td",g({parentName:"tr"},{align:null})),(0,e.kt)("td",g({parentName:"tr"},{align:null})),(0,e.kt)("td",g({parentName:"tr"},{align:null}),"uint8_t"),(0,e.kt)("td",g({parentName:"tr"},{align:null}),"saturation ,"),(0,e.kt)("td",g({parentName:"tr"},{align:null})),(0,e.kt)("td",g({parentName:"tr"},{align:null}))),(0,e.kt)("tr",{parentName:"tbody"},(0,e.kt)("td",g({parentName:"tr"},{align:null})),(0,e.kt)("td",g({parentName:"tr"},{align:null})),(0,e.kt)("td",g({parentName:"tr"},{align:null}),"uint8_t"),(0,e.kt)("td",g({parentName:"tr"},{align:null}),"luminance ,"),(0,e.kt)("td",g({parentName:"tr"},{align:null})),(0,e.kt)("td",g({parentName:"tr"},{align:null}))),(0,e.kt)("tr",{parentName:"tbody"},(0,e.kt)("td",g({parentName:"tr"},{align:null})),(0,e.kt)("td",g({parentName:"tr"},{align:null})),(0,e.kt)("td",g({parentName:"tr"},{align:null}),"uint8_t &"),(0,e.kt)("td",g({parentName:"tr"},{align:null}),"red ,"),(0,e.kt)("td",g({parentName:"tr"},{align:null})),(0,e.kt)("td",g({parentName:"tr"},{align:null}))),(0,e.kt)("tr",{parentName:"tbody"},(0,e.kt)("td",g({parentName:"tr"},{align:null})),(0,e.kt)("td",g({parentName:"tr"},{align:null})),(0,e.kt)("td",g({parentName:"tr"},{align:null}),"uint8_t &"),(0,e.kt)("td",g({parentName:"tr"},{align:null}),"green ,"),(0,e.kt)("td",g({parentName:"tr"},{align:null})),(0,e.kt)("td",g({parentName:"tr"},{align:null}))),(0,e.kt)("tr",{parentName:"tbody"},(0,e.kt)("td",g({parentName:"tr"},{align:null})),(0,e.kt)("td",g({parentName:"tr"},{align:null})),(0,e.kt)("td",g({parentName:"tr"},{align:null}),"uint8_t &"),(0,e.kt)("td",g({parentName:"tr"},{align:null}),"blue"),(0,e.kt)("td",g({parentName:"tr"},{align:null})),(0,e.kt)("td",g({parentName:"tr"},{align:null}))),(0,e.kt)("tr",{parentName:"tbody"},(0,e.kt)("td",g({parentName:"tr"},{align:null})),(0,e.kt)("td",g({parentName:"tr"},{align:null})),(0,e.kt)("td",g({parentName:"tr"},{align:null}),")"),(0,e.kt)("td",g({parentName:"tr"},{align:null})),(0,e.kt)("td",g({parentName:"tr"},{align:null})),(0,e.kt)("td",g({parentName:"tr"},{align:null})))))),(0,e.kt)("div",{class:"api-container-content api-container-content-function",markdown:"1"},(0,e.kt)("p",null,"Convert a given color from HSV (Hue, Saturation, Value) to RGB (Red, Green, Blue). "),(0,e.kt)("div",{class:"api-content-indented-header",markdown:"1"},"Parameters:"),(0,e.kt)("div",{class:"api-content-indented",markdown:"1"},(0,e.kt)("table",null,(0,e.kt)("thead",{parentName:"table"},(0,e.kt)("tr",{parentName:"thead"},(0,e.kt)("th",g({parentName:"tr"},{align:null})),(0,e.kt)("th",g({parentName:"tr"},{align:null})))),(0,e.kt)("tbody",{parentName:"table"},(0,e.kt)("tr",{parentName:"tbody"},(0,e.kt)("td",g({parentName:"tr"},{align:null}),"hue"),(0,e.kt)("td",g({parentName:"tr"},{align:null}),"The input Hue (0 to 255).")),(0,e.kt)("tr",{parentName:"tbody"},(0,e.kt)("td",g({parentName:"tr"},{align:null}),"saturation"),(0,e.kt)("td",g({parentName:"tr"},{align:null}),"The input Saturation (0 to 255).")),(0,e.kt)("tr",{parentName:"tbody"},(0,e.kt)("td",g({parentName:"tr"},{align:null}),"luminance"),(0,e.kt)("td",g({parentName:"tr"},{align:null}),"The input Value (0 to 255).")),(0,e.kt)("tr",{parentName:"tbody"},(0,e.kt)("td",g({parentName:"tr"},{align:null}),"red"),(0,e.kt)("td",g({parentName:"tr"},{align:null}),"The output Red (0 to 255).")),(0,e.kt)("tr",{parentName:"tbody"},(0,e.kt)("td",g({parentName:"tr"},{align:null}),"green"),(0,e.kt)("td",g({parentName:"tr"},{align:null}),"The output Green (0 to 255).")),(0,e.kt)("tr",{parentName:"tbody"},(0,e.kt)("td",g({parentName:"tr"},{align:null}),"blue"),(0,e.kt)("td",g({parentName:"tr"},{align:null}),"The output Blue (0 to 255)."))))),(0,e.kt)("div",{class:"api-note",markdown:"1"},(0,e.kt)("h5",null,"Note"),(0,e.kt)("p",null,"The conversion is an approximation. ")))),(0,e.kt)(l.Z,{url:"classtouchgfx_1_1_color#function-getrgbfrom24bithsv",mdxType:"DoxybookHeaderLink"}),(0,e.kt)("h3",g({},{id:"getrgbfrom24bithsv"}),"getRGBFrom24BitHSV"),(0,e.kt)("div",{class:"api-container",markdown:"1"},(0,e.kt)("div",{class:"api-container-header api-container-header-function",markdown:"1"},(0,e.kt)("table",null,(0,e.kt)("thead",{parentName:"table"},(0,e.kt)("tr",{parentName:"thead"},(0,e.kt)("th",g({parentName:"tr"},{align:null})),(0,e.kt)("th",g({parentName:"tr"},{align:null})),(0,e.kt)("th",g({parentName:"tr"},{align:null})),(0,e.kt)("th",g({parentName:"tr"},{align:null})),(0,e.kt)("th",g({parentName:"tr"},{align:null})),(0,e.kt)("th",g({parentName:"tr"},{align:null})))),(0,e.kt)("tbody",{parentName:"table"},(0,e.kt)("tr",{parentName:"tbody"},(0,e.kt)("td",g({parentName:"tr"},{align:null}),"static","\xa0","void","\xa0",(0,e.kt)(r.Z,{to:"classtouchgfx_1_1_color#function-getrgbfrom24bithsv",mdxType:"Link"},"getRGBFrom24BitHSV")),(0,e.kt)("td",g({parentName:"tr"},{align:null}),"("),(0,e.kt)("td",g({parentName:"tr"},{align:null}),"uint8_t"),(0,e.kt)("td",g({parentName:"tr"},{align:null}),"hue ,"),(0,e.kt)("td",g({parentName:"tr"},{align:null})),(0,e.kt)("td",g({parentName:"tr"},{align:null}))),(0,e.kt)("tr",{parentName:"tbody"},(0,e.kt)("td",g({parentName:"tr"},{align:null})),(0,e.kt)("td",g({parentName:"tr"},{align:null})),(0,e.kt)("td",g({parentName:"tr"},{align:null}),"uint8_t"),(0,e.kt)("td",g({parentName:"tr"},{align:null}),"saturation ,"),(0,e.kt)("td",g({parentName:"tr"},{align:null})),(0,e.kt)("td",g({parentName:"tr"},{align:null}))),(0,e.kt)("tr",{parentName:"tbody"},(0,e.kt)("td",g({parentName:"tr"},{align:null})),(0,e.kt)("td",g({parentName:"tr"},{align:null})),(0,e.kt)("td",g({parentName:"tr"},{align:null}),"uint8_t"),(0,e.kt)("td",g({parentName:"tr"},{align:null}),"value ,"),(0,e.kt)("td",g({parentName:"tr"},{align:null})),(0,e.kt)("td",g({parentName:"tr"},{align:null}))),(0,e.kt)("tr",{parentName:"tbody"},(0,e.kt)("td",g({parentName:"tr"},{align:null})),(0,e.kt)("td",g({parentName:"tr"},{align:null})),(0,e.kt)("td",g({parentName:"tr"},{align:null}),"uint8_t &"),(0,e.kt)("td",g({parentName:"tr"},{align:null}),"red ,"),(0,e.kt)("td",g({parentName:"tr"},{align:null})),(0,e.kt)("td",g({parentName:"tr"},{align:null}))),(0,e.kt)("tr",{parentName:"tbody"},(0,e.kt)("td",g({parentName:"tr"},{align:null})),(0,e.kt)("td",g({parentName:"tr"},{align:null})),(0,e.kt)("td",g({parentName:"tr"},{align:null}),"uint8_t &"),(0,e.kt)("td",g({parentName:"tr"},{align:null}),"green ,"),(0,e.kt)("td",g({parentName:"tr"},{align:null})),(0,e.kt)("td",g({parentName:"tr"},{align:null}))),(0,e.kt)("tr",{parentName:"tbody"},(0,e.kt)("td",g({parentName:"tr"},{align:null})),(0,e.kt)("td",g({parentName:"tr"},{align:null})),(0,e.kt)("td",g({parentName:"tr"},{align:null}),"uint8_t &"),(0,e.kt)("td",g({parentName:"tr"},{align:null}),"blue"),(0,e.kt)("td",g({parentName:"tr"},{align:null})),(0,e.kt)("td",g({parentName:"tr"},{align:null}))),(0,e.kt)("tr",{parentName:"tbody"},(0,e.kt)("td",g({parentName:"tr"},{align:null})),(0,e.kt)("td",g({parentName:"tr"},{align:null})),(0,e.kt)("td",g({parentName:"tr"},{align:null}),")"),(0,e.kt)("td",g({parentName:"tr"},{align:null})),(0,e.kt)("td",g({parentName:"tr"},{align:null})),(0,e.kt)("td",g({parentName:"tr"},{align:null})))))),(0,e.kt)("div",{class:"api-container-content api-container-content-function",markdown:"1"},(0,e.kt)("p",null,"Convert a given color from HSV (Hue, Saturation, Value) to RGB (Red, Green, Blue). "),(0,e.kt)("div",{class:"api-content-indented-header",markdown:"1"},"Parameters:"),(0,e.kt)("div",{class:"api-content-indented",markdown:"1"},(0,e.kt)("table",null,(0,e.kt)("thead",{parentName:"table"},(0,e.kt)("tr",{parentName:"thead"},(0,e.kt)("th",g({parentName:"tr"},{align:null})),(0,e.kt)("th",g({parentName:"tr"},{align:null})))),(0,e.kt)("tbody",{parentName:"table"},(0,e.kt)("tr",{parentName:"tbody"},(0,e.kt)("td",g({parentName:"tr"},{align:null}),"hue"),(0,e.kt)("td",g({parentName:"tr"},{align:null}),"The input Hue (0 to 255).")),(0,e.kt)("tr",{parentName:"tbody"},(0,e.kt)("td",g({parentName:"tr"},{align:null}),"saturation"),(0,e.kt)("td",g({parentName:"tr"},{align:null}),"The input Saturation (0 to 255).")),(0,e.kt)("tr",{parentName:"tbody"},(0,e.kt)("td",g({parentName:"tr"},{align:null}),"value"),(0,e.kt)("td",g({parentName:"tr"},{align:null}),"The input Value (0 to 255).")),(0,e.kt)("tr",{parentName:"tbody"},(0,e.kt)("td",g({parentName:"tr"},{align:null}),"red"),(0,e.kt)("td",g({parentName:"tr"},{align:null}),"The output Red (0 to 255).")),(0,e.kt)("tr",{parentName:"tbody"},(0,e.kt)("td",g({parentName:"tr"},{align:null}),"green"),(0,e.kt)("td",g({parentName:"tr"},{align:null}),"The output Green (0 to 255).")),(0,e.kt)("tr",{parentName:"tbody"},(0,e.kt)("td",g({parentName:"tr"},{align:null}),"blue"),(0,e.kt)("td",g({parentName:"tr"},{align:null}),"The output Blue (0 to 255)."))))),(0,e.kt)("div",{class:"api-note",markdown:"1"},(0,e.kt)("h5",null,"Note"),(0,e.kt)("p",null,"The conversion is an approximation. ")))))}f.isMDXComponent=!0}}]);